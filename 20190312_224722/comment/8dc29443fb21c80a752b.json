{"body": "\u3053\u3093\u306a\u51e6\u7406\u3082\u3042\u308a\uff1f\n\n\n```py:Python3.6\u4ee5\u964d\u3067\ndef draw(n):\n    if n % 2 == 0:\n        return 'invalid'\n\n    lines = []\n    for i in range(n):\n        right = f\"{chr(ord('a')+i)+'-'*abs(n//2-i):->{n//2+1}}\"\n        left = right[:0:-1]\n        lines.append(left + right)\n    return '\\n'.join(lines)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(draw(n))\n```\n\n```py:\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\n>>> print((lambda n:n%2 and '\\n'.join((lambda s:s[:0:-1]+s)(f\"{chr(97+i)+'-'*abs(n//2-i):->{n//2+1}}\") for i in range(n)) or 'invalid')(int(input())))\n5\n--a--\n-b-b-\nc---c\n-d-d-\n--e--\n>>> print((lambda n:n%2 and '\\n'.join((lambda s:s[:0:-1]+s)(f\"{chr(97+i)+'-'*abs(n//2-i):->{n//2+1}}\") for i in range(n)) or 'invalid')(int(input())))\n2\ninvalid\n```\n\n97 \u306f ord('a') \u306e\u5024\u3067\u3059\u3002\n", "created_at": "2018-11-09T02:51:38+09:00", "id": "8dc29443fb21c80a752b", "rendered_body": "<p>\u3053\u3093\u306a\u51e6\u7406\u3082\u3042\u308a\uff1f</p>\n\n<div class=\"code-frame\" data-lang=\"py\">\n<div class=\"code-lang\"><span class=\"bold\">Python3.6\u4ee5\u964d\u3067</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"nf\">draw</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s\">'invalid'</span>\n\n    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"s\">\"{chr(ord('a')+i)+'-'*abs(n//2-i):-&gt;{n//2+1}}\"</span>\n        <span class=\"n\">left</span> <span class=\"o\">=</span> <span class=\"n\">right</span><span class=\"p\">[:</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">left</span> <span class=\"o\">+</span> <span class=\"n\">right</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"py\">\n<div class=\"code-lang\"><span class=\"bold\">\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc</span></div>\n<div class=\"highlight\"><pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">((</span><span class=\"k\">lambda</span> <span class=\"n\">n</span><span class=\"p\">:</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">((</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span><span class=\"n\">s</span><span class=\"p\">[:</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"n\">s</span><span class=\"p\">)(</span><span class=\"n\">f</span><span class=\"s\">\"{chr(97+i)+'-'*abs(n//2-i):-&gt;{n//2+1}}\"</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"s\">'invalid'</span><span class=\"p\">)(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())))</span>\n<span class=\"mi\">5</span>\n<span class=\"o\">--</span><span class=\"n\">a</span><span class=\"o\">--</span>\n<span class=\"o\">-</span><span class=\"n\">b</span><span class=\"o\">-</span><span class=\"n\">b</span><span class=\"o\">-</span>\n<span class=\"n\">c</span><span class=\"o\">---</span><span class=\"n\">c</span>\n<span class=\"o\">-</span><span class=\"n\">d</span><span class=\"o\">-</span><span class=\"n\">d</span><span class=\"o\">-</span>\n<span class=\"o\">--</span><span class=\"n\">e</span><span class=\"o\">--</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">((</span><span class=\"k\">lambda</span> <span class=\"n\">n</span><span class=\"p\">:</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">((</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span><span class=\"n\">s</span><span class=\"p\">[:</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"n\">s</span><span class=\"p\">)(</span><span class=\"n\">f</span><span class=\"s\">\"{chr(97+i)+'-'*abs(n//2-i):-&gt;{n//2+1}}\"</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"s\">'invalid'</span><span class=\"p\">)(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())))</span>\n<span class=\"mi\">2</span>\n<span class=\"n\">invalid</span>\n</pre></div>\n</div>\n\n<p>97 \u306f ord('a') \u306e\u5024\u3067\u3059\u3002</p>\n", "updated_at": "2018-11-09T13:39:17+09:00", "user": {"description": "\u4f7f\u7528\u8a00\u8a9e\u306f C, Lisp, Java, Pyhthon, C#, JavaScript/Node.js\u3002\r\n\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u306f Z80, 6502, 6809, 68000, SPARC, PowerPC, ARM, x86/x64\u3002\r\n", "facebook_id": "", "followees_count": 4, "followers_count": 278, "github_login_name": null, "id": "shiracamus", "items_count": 57, "linkedin_id": "", "location": "", "name": "\u3057\u3089\u304b\u307f\u3085", "organization": "", "permanent_id": 29070, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/29070/profile-images/1473685289", "team_only": false, "twitter_screen_name": "shiracamus", "website_url": ""}}