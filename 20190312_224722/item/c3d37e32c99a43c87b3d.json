{"rendered_body": "<p><a href=\"https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%88%E3%82%A5%E3%83%BC%E3%82%B8%E3%82%BD%E3%83%BC%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\">\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8(stooge sort)\u3068\u3044\u3046\u30bd\u30fc\u30c8\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u3002</a>\u3053\u306e\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3068\u3066\u3082<strong>\u52b9\u7387\u306e\u60aa\u3044</strong>\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3089\u3057\u304f\u3001\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u3088\u308a\u52b9\u7387\u304c\u60aa\u3044\u3068\u304b\u3002</p>\n\n<p>\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u3092Python3\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre>\n<span class=\"c\"># \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u300d</span>\n<span class=\"k\">def</span> <span class=\"nf\">stooge_sort</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">):</span>\n    <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n        <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]:</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">3</span>\n            <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(((</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">t</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">t</span><span class=\"p\">)))</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n    <span class=\"n\">ls</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n    <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">shuffle</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n    <span class=\"n\">stooge_sort</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n\n<span class=\"c\"># [20, 4, 13, 28, 12, 0, 17, 19, 22, 21, 5, 23, 3, 27, 14, 2, 29, 11, 24, 7, 15, 9, 25, 6, 26, 18, 8, 1, 10, 16]</span>\n<span class=\"c\"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]</span>\n\n</pre></div></div>\n\n<p>\u78ba\u304b\u306b\u3061\u3083\u3093\u3068\u30bd\u30fc\u30c8\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306d\u3002 \u5de5\u592b(?)\u3068\u3057\u3066\u306f\u518d\u5e30\u3067\u306f\u306a\u304f\u3001\u7e70\u308a\u8fd4\u3057\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\u70b9\u3067\u3059\u304c\u2026\u2026\u52b9\u7387\u306e\u308f\u308b\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u5bfe\u3057\u3066\u3001\u52b9\u7387\u3088\u304f\u5b9f\u88c5\u3059\u308b\u610f\u5473\u306f\u3042\u308b\u306e\u304b(\u00b4\u30fb\u03c9\u30fb`)</p>\n\n<p>\u6b21\u306b\u52b9\u7387\u3067\u3059\u304c\u3001<a href=\"https://ja.wikipedia.org/wiki/%E3%83%90%E3%83%96%E3%83%AB%E3%82%BD%E3%83%BC%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\">\u52b9\u7387\u306e\u60aa\u3044\u300c\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u300d</a>\u3068<a href=\"https://ja.wikipedia.org/wiki/%E3%82%AF%E3%82%A4%E3%83%83%E3%82%AF%E3%82%BD%E3%83%BC%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\">\u52b9\u7387\u306e\u3044\u3044\u300c\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u300d</a>\u3092\u305d\u308c\u305e\u308c\u5b9f\u88c5\u3057\u30011000\u500b\u306e\u8981\u7d20\u3092\u6301\u3064\u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\u3059\u308b\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre><span class=\"c\"># \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u300d</span>\n<span class=\"k\">def</span> <span class=\"nf\">stooge_sort</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">):</span>\n    <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n        <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]:</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">3</span>\n            <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(((</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">t</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"n\">t</span><span class=\"p\">)))</span>\n\n\n<span class=\"c\"># \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u300d</span>\n<span class=\"k\">def</span> <span class=\"nf\">bubble_sort</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">):</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]:</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n\n<span class=\"c\"># \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u300d</span>\n<span class=\"k\">def</span> <span class=\"nf\">quick_sort</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">):</span>\n    <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n        <span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">left</span> <span class=\"o\">&gt;=</span> <span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n\n        <span class=\"n\">pivot</span> <span class=\"o\">=</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">left</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">right</span> <span class=\"o\">-</span> <span class=\"n\">left</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span>\n        <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">while</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">pivot</span><span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">while</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">pivot</span><span class=\"p\">:</span> <span class=\"n\">j</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"n\">j</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n\n            <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n\n        <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(((</span><span class=\"n\">j</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">random</span><span class=\"p\">,</span> <span class=\"n\">copy</span><span class=\"p\">,</span> <span class=\"n\">time</span>\n\n    <span class=\"n\">ls</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">))</span>\n    <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">shuffle</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n\n    <span class=\"n\">bubble_ls</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n    <span class=\"n\">bubble_start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"n\">bubble_sort</span><span class=\"p\">(</span><span class=\"n\">bubble_ls</span><span class=\"p\">)</span>\n    <span class=\"n\">bubble_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">bubble_start</span>\n\n    <span class=\"n\">quick_ls</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n    <span class=\"n\">quick_start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"n\">quick_sort</span><span class=\"p\">(</span><span class=\"n\">quick_ls</span><span class=\"p\">)</span>\n    <span class=\"n\">quick_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">quick_start</span>\n\n    <span class=\"n\">stooge_ls</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span>\n    <span class=\"n\">stooge_start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"n\">stooge_sort</span><span class=\"p\">(</span><span class=\"n\">stooge_ls</span><span class=\"p\">)</span>\n    <span class=\"n\">stooge_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">stooge_start</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"bubble : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bubble_time</span><span class=\"p\">))</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"quick  : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">quick_time</span><span class=\"p\">))</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"stooge : {}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">stooge_time</span><span class=\"p\">))</span>\n\n    <span class=\"c\"># bubble : 0.0938718318939209</span>\n    <span class=\"c\"># quick  : 0.0</span>\n    <span class=\"c\"># stooge : 33.47836709022522</span>\n</pre></div></div>\n\n<p>\u9045\u3044 ((((\u00b4\u30fb\u03c9\u30fb`))))</p>\n", "body": "[\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8(stooge sort)\u3068\u3044\u3046\u30bd\u30fc\u30c8\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u3002](https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%88%E3%82%A5%E3%83%BC%E3%82%B8%E3%82%BD%E3%83%BC%E3%83%88)\u3053\u306e\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3068\u3066\u3082__\u52b9\u7387\u306e\u60aa\u3044__\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3089\u3057\u304f\u3001\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u3088\u308a\u52b9\u7387\u304c\u60aa\u3044\u3068\u304b\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u3092Python3\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py3\n\n# \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u300d\ndef stooge_sort(ls):\n    stack = [(0, len(ls) - 1)]\n    \n    while stack:\n        i, j = stack.pop()\n        if ls[i] > ls[j]: ls[i], ls[j] = ls[j], ls[i]\n        \n        if j - i + 1 >= 3:\n            t = (j - i + 1) // 3\n            stack.extend(((i, j - t), (i + t, j), (i, j - t)))\n\nif __name__ == '__main__':\n    import random\n\n    ls = list(range(30))\n    random.shuffle(ls)\n\n    print(ls)\n    stooge_sort(ls)\n    print(ls)\n\n# [20, 4, 13, 28, 12, 0, 17, 19, 22, 21, 5, 23, 3, 27, 14, 2, 29, 11, 24, 7, 15, 9, 25, 6, 26, 18, 8, 1, 10, 16]\n# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n\n```\n\n\u78ba\u304b\u306b\u3061\u3083\u3093\u3068\u30bd\u30fc\u30c8\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306d\u3002 \u5de5\u592b(?)\u3068\u3057\u3066\u306f\u518d\u5e30\u3067\u306f\u306a\u304f\u3001\u7e70\u308a\u8fd4\u3057\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\u70b9\u3067\u3059\u304c\u2026\u2026\u52b9\u7387\u306e\u308f\u308b\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u5bfe\u3057\u3066\u3001\u52b9\u7387\u3088\u304f\u5b9f\u88c5\u3059\u308b\u610f\u5473\u306f\u3042\u308b\u306e\u304b(\u00b4\u30fb\u03c9\u30fb`)\n\n\u6b21\u306b\u52b9\u7387\u3067\u3059\u304c\u3001[\u52b9\u7387\u306e\u60aa\u3044\u300c\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u300d](https://ja.wikipedia.org/wiki/%E3%83%90%E3%83%96%E3%83%AB%E3%82%BD%E3%83%BC%E3%83%88)\u3068[\u52b9\u7387\u306e\u3044\u3044\u300c\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u300d](https://ja.wikipedia.org/wiki/%E3%82%AF%E3%82%A4%E3%83%83%E3%82%AF%E3%82%BD%E3%83%BC%E3%83%88)\u3092\u305d\u308c\u305e\u308c\u5b9f\u88c5\u3057\u30011000\u500b\u306e\u8981\u7d20\u3092\u6301\u3064\u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\u3059\u308b\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```py3\n# \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u300d\ndef stooge_sort(ls):\n    stack = [(0, len(ls) - 1)]\n    \n    while stack:\n        i, j = stack.pop()\n        if ls[i] > ls[j]: ls[i], ls[j] = ls[j], ls[i]\n        \n        if j - i + 1 >= 3:\n            t = (j - i + 1) // 3\n            stack.extend(((i, j - t), (i + t, j), (i, j - t)))\n\n\n# \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u300d\ndef bubble_sort(ls):\n    t = len(ls)\n\n    for i in range(t - 1):\n        for j in range(i + 1, t):\n            if ls[i] > ls[j]: ls[i], ls[j] = ls[j], ls[i]\n\n\n# \u30ea\u30b9\u30c8\u3092\u7834\u58ca\u7684\u306b\u30bd\u30fc\u30c8\u3059\u308b\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u300c\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u300d\ndef quick_sort(ls):\n    stack = [(0, len(ls) - 1)]\n\n    while stack:\n        left, right = stack.pop()\n        if left >= right: continue\n\n        pivot = ls[left + (right - left) // 2]\n        i, j = left, right\n        while True:\n            while ls[i] < pivot: i += 1\n            while ls[j] > pivot: j -= 1\n\n            if i >= j: break\n            \n            ls[i], ls[j] = ls[j], ls[i]\n            i, j = i + 1, j - 1\n\n        stack.extend(((j + 1, right), (left, i - 1)))\n\nif __name__ == '__main__':\n    import random, copy, time\n\n    ls = list(range(1000))\n    random.shuffle(ls)\n    \n    bubble_ls = copy.deepcopy(ls)\n    bubble_start = time.time()\n    bubble_sort(bubble_ls)\n    bubble_time = time.time() - bubble_start\n\n    quick_ls = copy.deepcopy(ls)\n    quick_start = time.time()\n    quick_sort(quick_ls)\n    quick_time = time.time() - quick_start\n\n    stooge_ls = copy.deepcopy(ls)\n    stooge_start = time.time()\n    stooge_sort(stooge_ls)\n    stooge_time = time.time() - stooge_start\n\n    print(\"bubble : {}\".format(bubble_time))\n    print(\"quick  : {}\".format(quick_time))\n    print(\"stooge : {}\".format(stooge_time))\n\n    # bubble : 0.0938718318939209\n    # quick  : 0.0\n    # stooge : 33.47836709022522\n```\n\n\u9045\u3044 ((((\u00b4\u30fb\u03c9\u30fb`))))\n", "coediting": false, "comments_count": 0, "created_at": "2016-07-31T21:58:56+09:00", "group": null, "id": "c3d37e32c99a43c87b3d", "likes_count": 4, "private": false, "reactions_count": 0, "tags": [{"name": "Python", "versions": []}, {"name": "Python3", "versions": []}], "title": "\u30b9\u30c8\u30a5\u30fc\u30b8\u30bd\u30fc\u30c8\u3092Python3\u3067\u5b9f\u88c5(\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8&\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8)", "updated_at": "2016-07-31T21:58:56+09:00", "url": "https://qiita.com/neko_the_shadow/items/c3d37e32c99a43c87b3d", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}