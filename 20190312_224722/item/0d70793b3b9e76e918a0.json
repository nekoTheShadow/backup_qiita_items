{"rendered_body": "<p>\u53c2\u8003: <a href=\"https://qiita.com/neko_the_shadow/items/e6a931b8a9193b47fcd3\" id=\"reference-3ed30283dfa0a23295b6\">\u300cC#\u3067\u30b5\u30a4\u30ban\u306e\u9806\u5217\u3092\u3059\u3079\u3066\u751f\u6210\u3057\u305f\u3044\u3002\u300d</a></p>\n\n<p>\u8868\u984c\u306e\u3068\u304a\u308a\u300c\u30d3\u30c3\u30c8\u6f14\u7b97\u3067\u3079\u304d\u96c6\u5408\u3092\u4f5c\u6210\u3059\u308b\u300d\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u969b\u306e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304a\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u306fC#\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5185\u5bb9\u3068\u3057\u3066\u306f\u307b\u304b\u306e\u8a00\u8a9e\u3067\u3082\u901a\u7528\u3059\u308b\u3082\u306e\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<p>\u5358\u7d14\u306a\u5185\u5bb9\u306e\u305f\u3081\u3001\u5b9f\u88c5\u65b9\u6cd5\u306f\u3055\u307e\u3056\u307e\u306b\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305afor\u30eb\u30fc\u30d7\u3092\u3064\u304b\u3063\u3066\"\u3079\u305f\"\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\"><div class=\"highlight\"><pre><span class=\"kt\">int</span> <span class=\"n\">n</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">bit</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">bit</span> <span class=\"p\">&lt;</span> <span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">n</span><span class=\"p\">;</span> <span class=\"n\">bit</span><span class=\"p\">++)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">var</span> <span class=\"n\">permutation</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">List</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;();</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">&lt;</span> <span class=\"n\">n</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"p\">++)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">bit</span> <span class=\"p\">&amp;</span> <span class=\"p\">(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">i</span><span class=\"p\">))</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">permutation</span><span class=\"p\">.</span><span class=\"nf\">Add</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"[\"</span> <span class=\"p\">+</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"s\">\",\"</span><span class=\"p\">,</span> <span class=\"n\">permutation</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"s\">\"]\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div></div>\n\n<p>\u4ee5\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001n\u500b\u306e\u96c6\u5408\u304b\u3089\u4f5c\u6210\u3055\u308c\u308b\u3079\u304d\u96c6\u5408\u3092\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3059(\u8868\u793a\u5185\u5bb9\u306f\u5f8c\u8ff0)\u3002\u6ce8\u610f\u3068\u3057\u3066\u306f\u6574\u6570\u578b\u3068\u3057\u3066int\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001n\u304c\u3042\u307e\u308a\u306b\u5927\u304d\u304f\u306a\u308b\u3068\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u8d77\u3053\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u7834\u7dbb\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p>\n\n<p>\u305b\u3063\u304b\u304fC#\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\u5168\u304f\u540c\u3058\u5185\u5bb9\u3092LINQ\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\"><div class=\"highlight\"><pre><span class=\"kt\">int</span> <span class=\"n\">n</span> <span class=\"p\">=</span> <span class=\"m\">5</span><span class=\"p\">;</span>\n<span class=\"kt\">var</span> <span class=\"n\">permutations</span> <span class=\"p\">=</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n                             <span class=\"p\">.</span><span class=\"nf\">Select</span><span class=\"p\">(</span><span class=\"n\">bit</span> <span class=\"p\">=&gt;</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">).</span><span class=\"nf\">Where</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span><span class=\"n\">bit</span> <span class=\"p\">&amp;</span> <span class=\"p\">(</span><span class=\"m\">1</span> <span class=\"p\">&lt;&lt;</span> <span class=\"n\">i</span><span class=\"p\">))</span> <span class=\"p\">!=</span> <span class=\"m\">0</span><span class=\"p\">));</span>\n<span class=\"k\">foreach</span><span class=\"p\">(</span><span class=\"kt\">var</span> <span class=\"n\">permutation</span> <span class=\"k\">in</span> <span class=\"n\">permutations</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"[\"</span> <span class=\"p\">+</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"s\">\",\"</span><span class=\"p\">,</span> <span class=\"n\">permutation</span><span class=\"p\">)</span> <span class=\"p\">+</span> <span class=\"s\">\"]\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div></div>\n\n<p>\u5168\u822c\u7684\u306b\u8a18\u8ff0\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\u306d(\u00b4\u30fb\u03c9\u30fb\uff40)</p>\n\n<hr>\n\n<p>\u3075\u305f\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8868\u793a\u7d50\u679c\u306f\u3069\u3061\u3089\u3082\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>[]\n[0]\n[1]\n[0,1]\n[2]\n[0,2]\n[1,2]\n[0,1,2]\n[3]\n[0,3]\n[1,3]\n[0,1,3]\n[2,3]\n[0,2,3]\n[1,2,3]\n[0,1,2,3]\n[4]\n[0,4]\n[1,4]\n[0,1,4]\n[2,4]\n[0,2,4]\n[1,2,4]\n[0,1,2,4]\n[3,4]\n[0,3,4]\n[1,3,4]\n[0,1,3,4]\n[2,3,4]\n[0,2,3,4]\n[1,2,3,4]\n[0,1,2,3,4]\n</pre></div></div>\n", "body": "\u53c2\u8003: [\u300cC#\u3067\u30b5\u30a4\u30ban\u306e\u9806\u5217\u3092\u3059\u3079\u3066\u751f\u6210\u3057\u305f\u3044\u3002\u300d](https://qiita.com/neko_the_shadow/items/e6a931b8a9193b47fcd3)\n\n\u8868\u984c\u306e\u3068\u304a\u308a\u300c\u30d3\u30c3\u30c8\u6f14\u7b97\u3067\u3079\u304d\u96c6\u5408\u3092\u4f5c\u6210\u3059\u308b\u300d\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u969b\u306e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304a\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u306fC#\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5185\u5bb9\u3068\u3057\u3066\u306f\u307b\u304b\u306e\u8a00\u8a9e\u3067\u3082\u901a\u7528\u3059\u308b\u3082\u306e\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5358\u7d14\u306a\u5185\u5bb9\u306e\u305f\u3081\u3001\u5b9f\u88c5\u65b9\u6cd5\u306f\u3055\u307e\u3056\u307e\u306b\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305afor\u30eb\u30fc\u30d7\u3092\u3064\u304b\u3063\u3066\"\u3079\u305f\"\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```csharp\nint n = 5;\nfor (int bit = 0; bit < 1 << n; bit++)\n{\n    var permutation = new List<int>();\n    for (int i = 0; i < n; i++)\n    {\n        if ((bit & (1 << i)) != 0)\n        {\n            permutation.Add(i);\n        }\n    }\n    Console.WriteLine(\"[\" + string.Join(\",\", permutation) + \"]\");\n}\n```\n\n\u4ee5\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001n\u500b\u306e\u96c6\u5408\u304b\u3089\u4f5c\u6210\u3055\u308c\u308b\u3079\u304d\u96c6\u5408\u3092\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3059(\u8868\u793a\u5185\u5bb9\u306f\u5f8c\u8ff0)\u3002\u6ce8\u610f\u3068\u3057\u3066\u306f\u6574\u6570\u578b\u3068\u3057\u3066int\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001n\u304c\u3042\u307e\u308a\u306b\u5927\u304d\u304f\u306a\u308b\u3068\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u8d77\u3053\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u7834\u7dbb\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305b\u3063\u304b\u304fC#\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\u5168\u304f\u540c\u3058\u5185\u5bb9\u3092LINQ\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```csharp\nint n = 5;\nvar permutations = Enumerable.Range(0, 1 << n)\n                             .Select(bit => Enumerable.Range(0, n).Where(i => (bit & (1 << i)) != 0));\nforeach(var permutation in permutations)\n{\n    Console.WriteLine(\"[\" + string.Join(\",\", permutation) + \"]\");\n}\n```\n\n\u5168\u822c\u7684\u306b\u8a18\u8ff0\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\u306d(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n---\n\n\u3075\u305f\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8868\u793a\u7d50\u679c\u306f\u3069\u3061\u3089\u3082\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n```\n[]\n[0]\n[1]\n[0,1]\n[2]\n[0,2]\n[1,2]\n[0,1,2]\n[3]\n[0,3]\n[1,3]\n[0,1,3]\n[2,3]\n[0,2,3]\n[1,2,3]\n[0,1,2,3]\n[4]\n[0,4]\n[1,4]\n[0,1,4]\n[2,4]\n[0,2,4]\n[1,2,4]\n[0,1,2,4]\n[3,4]\n[0,3,4]\n[1,3,4]\n[0,1,3,4]\n[2,3,4]\n[0,2,3,4]\n[1,2,3,4]\n[0,1,2,3,4]\n```\n", "coediting": false, "comments_count": 0, "created_at": "2018-12-24T16:17:25+09:00", "group": null, "id": "0d70793b3b9e76e918a0", "likes_count": 0, "private": false, "reactions_count": 0, "tags": [{"name": "C#", "versions": []}], "title": "\u30d3\u30c3\u30c8\u6f14\u7b97\u3092\u5229\u7528\u3057\u3066\u3079\u304d\u96c6\u5408\u3092\u4f5c\u6210\u3059\u308b\u3002", "updated_at": "2018-12-24T16:17:25+09:00", "url": "https://qiita.com/neko_the_shadow/items/0d70793b3b9e76e918a0", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}