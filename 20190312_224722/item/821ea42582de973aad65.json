{"rendered_body": "<p><a href=\"https://codeiq.jp/q/3526\" rel=\"nofollow noopener\" target=\"_blank\">CodeIQ\u300c\u9032\u6357\u30f4\u30a7\u30ea\u30fc\u30b0\u30c3\u30c9\u30de\u30fc\u30af\u300d\u554f\u984c</a>\u306e\u516c\u958b\u304c\u7d42\u4e86\u3057\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u81ea\u5206\u306e\u89e3\u7b54\u3092\u516c\u958b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u306a\u304aCodeIQ\u306f\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u90fd\u5408\u4e0a\u3001\u89e3\u7b54\u306e\u516c\u958b\u306f\u57fa\u672c\u7684\u306bNG\u3002\u305f\u3060<a href=\"https://twitter.com/tbpgr/status/953643033991438336\" rel=\"nofollow noopener\" target=\"_blank\">\u4eca\u56de\u306f\u51fa\u984c\u8005\u306e@tbpgr\u3055\u3093\u306e\u8a31\u53ef\u304c\u51fa\u3066\u3044\u308b</a>\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\u89e3\u7b54\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\">\n<div class=\"code-lang\"><span class=\"bold\">Program.cs</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">Program</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">n</span> <span class=\"p\">=</span> <span class=\"kt\">int</span><span class=\"p\">.</span><span class=\"nf\">Parse</span><span class=\"p\">(</span><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">ReadLine</span><span class=\"p\">());</span>\n        <span class=\"kt\">var</span> <span class=\"n\">ans</span> <span class=\"p\">=</span> <span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">);</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">ans</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"kt\">string</span> <span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"p\">%</span> <span class=\"m\">2</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"s\">\"invalid\"</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kt\">var</span> <span class=\"n\">matrix</span> <span class=\"p\">=</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">).</span><span class=\"nf\">Select</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">=&gt;</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Repeat</span><span class=\"p\">(</span><span class=\"s\">\".\"</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">).</span><span class=\"nf\">ToList</span><span class=\"p\">()).</span><span class=\"nf\">ToList</span><span class=\"p\">();</span>\n        <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">var</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">))</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">var</span> <span class=\"n\">j</span> <span class=\"p\">=</span> <span class=\"n\">i</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n            <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">n</span> <span class=\"p\">-</span> <span class=\"n\">j</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">=</span>  <span class=\"s\">\"v\"</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n\n        <span class=\"k\">return</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">NewLine</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">.</span><span class=\"nf\">Select</span><span class=\"p\">(</span><span class=\"n\">row</span> <span class=\"p\">=&gt;</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"p\">)));</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<p>\u307e\u305a\u306f\u4e8c\u6b21\u5143\u914d\u5217\u3092\u6587\u5b57\u5217<code>.</code>\u3067\u521d\u671f\u5316\u3057\u305f\u3042\u3068\u3001\u9069\u5f53\u306a\u8981\u7d20\u3092\u6587\u5b57\u5217\u90e8\u5206\u3067<code>v</code>\u3067\u4e0a\u66f8\u304d\u3059\u308b\u2015\u2015\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u30ed\u30b8\u30c3\u30af\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3082\u3046\u5c11\u3057C#\u3089\u3057\u3044\u66f8\u304d\u65b9\u304c\u3042\u308b\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u304c\u3001C#\u521d\u5fc3\u8005\u3068\u3057\u3066\u306f\u6e80\u8db3\u306a\u51fa\u6765\u4e0a\u304c\u308a\u3067\u3059\u3002</p>\n\n<p>\u6b21\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3002\u304b\u306a\u308a\u96d1\u3001\u3068\u3044\u3046\u304b\u30b3\u30d4\u30da\u3067\u4f5c\u3063\u305f\u611f\u6e80\u8f09(\u00b4\u30fb\u03c9\u30fb\uff40) \u6b63\u76f4\u306a\u3068\u3053\u308dNUnit\u304c\u3088\u304f\u308f\u304b\u3063\u3066\u304a\u3089\u305a\u3001\u96f0\u56f2\u6c17\u3067\u4f7f\u3063\u3066\u3044\u308b\u9762\u306f\u591a\u3005\u3042\u308a\u307e\u3059\u3002\u935b\u932c\u304c\u8db3\u308a\u306c(\u00b4\u30fb\u03c9\u30fb\uff40)</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\">\n<div class=\"code-lang\"><span class=\"bold\">ProgramTest.cs</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">using</span> <span class=\"nn\">Microsoft.VisualStudio.TestTools.UnitTesting</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">Tests</span>\n<span class=\"p\">{</span>\n    <span class=\"p\">[</span><span class=\"nf\">TestClass</span><span class=\"p\">()]</span>\n    <span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">ProgramTests</span>\n    <span class=\"p\">{</span>\n        <span class=\"p\">[</span><span class=\"nf\">TestMethod</span><span class=\"p\">()]</span>\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">DrawTest1</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Assert</span><span class=\"p\">.</span><span class=\"nf\">AreEqual</span><span class=\"p\">(</span><span class=\"s\">\"v\"</span><span class=\"p\">,</span> <span class=\"n\">Program</span><span class=\"p\">.</span><span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"p\">[</span><span class=\"nf\">TestMethod</span><span class=\"p\">()]</span>\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">DrawTest2</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">Assert</span><span class=\"p\">.</span><span class=\"nf\">AreEqual</span><span class=\"p\">(</span><span class=\"s\">\"invalid\"</span><span class=\"p\">,</span> <span class=\"n\">Program</span><span class=\"p\">.</span><span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"p\">[</span><span class=\"nf\">TestMethod</span><span class=\"p\">()]</span>\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">DrawTest3</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">var</span> <span class=\"n\">expected</span> <span class=\"p\">=</span> <span class=\"s\">\"v.v?v.v?.v.\"</span><span class=\"p\">.</span><span class=\"nf\">Replace</span><span class=\"p\">(</span><span class=\"s\">\"?\"</span><span class=\"p\">,</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">NewLine</span><span class=\"p\">);</span>\n            <span class=\"n\">Assert</span><span class=\"p\">.</span><span class=\"nf\">AreEqual</span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">,</span> <span class=\"n\">Program</span><span class=\"p\">.</span><span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"p\">[</span><span class=\"nf\">TestMethod</span><span class=\"p\">()]</span>\n        <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">DrawTest5</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n\n            <span class=\"kt\">var</span> <span class=\"n\">expected</span> <span class=\"p\">=</span> <span class=\"s\">\"v...v?v...v?.v.v.?.v.v.?..v..\"</span><span class=\"p\">.</span><span class=\"nf\">Replace</span><span class=\"p\">(</span><span class=\"s\">\"?\"</span><span class=\"p\">,</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">NewLine</span><span class=\"p\">);</span>\n            <span class=\"n\">Assert</span><span class=\"p\">.</span><span class=\"nf\">AreEqual</span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">,</span> <span class=\"n\">Program</span><span class=\"p\">.</span><span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"m\">5</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<p>\u95a2\u9023\u30ea\u30f3\u30af:</p>\n\n<ul>\n<li><a href=\"https://codeiq.jp/q/3526\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://codeiq.jp/q/3526</a></li>\n<li><a href=\"https://twitter.com/tbpgr/status/953643033991438336\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://twitter.com/tbpgr/status/953643033991438336</a></li>\n<li><a href=\"http://tbpgr.hatenablog.com/entry/2018/01/17/235711\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://tbpgr.hatenablog.com/entry/2018/01/17/235711</a></li>\n<li><a href=\"https://togetter.com/li/1184198\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://togetter.com/li/1184198</a></li>\n</ul>\n", "body": "[CodeIQ\u300c\u9032\u6357\u30f4\u30a7\u30ea\u30fc\u30b0\u30c3\u30c9\u30de\u30fc\u30af\u300d\u554f\u984c](https://codeiq.jp/q/3526)\u306e\u516c\u958b\u304c\u7d42\u4e86\u3057\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u81ea\u5206\u306e\u89e3\u7b54\u3092\u516c\u958b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u306a\u304aCodeIQ\u306f\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u90fd\u5408\u4e0a\u3001\u89e3\u7b54\u306e\u516c\u958b\u306f\u57fa\u672c\u7684\u306bNG\u3002\u305f\u3060[\u4eca\u56de\u306f\u51fa\u984c\u8005\u306e@tbpgr\u3055\u3093\u306e\u8a31\u53ef\u304c\u51fa\u3066\u3044\u308b](https://twitter.com/tbpgr/status/953643033991438336)\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\u89e3\u7b54\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp:Program.cs\nusing System;\nusing System.Linq;\n\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        var n = int.Parse(Console.ReadLine());\n        var ans = Draw(n);\n        Console.WriteLine(ans);\n    }\n\n    public static string Draw(int n)\n    {\n        if (n % 2 == 0)\n        {\n            return \"invalid\";\n        }\n\n        var matrix = Enumerable.Range(0, n).Select(i => Enumerable.Repeat(\".\", n).ToList()).ToList();\n        foreach (var i in Enumerable.Range(0, n))\n        {\n            var j = i / 2;\n            matrix[i][j] = matrix[i][n - j - 1] =  \"v\";\n        }\n\n\n        return string.Join(System.Environment.NewLine, matrix.Select(row => string.Join(\"\", row)));\n    }\n}\n```\n\n\u307e\u305a\u306f\u4e8c\u6b21\u5143\u914d\u5217\u3092\u6587\u5b57\u5217`.`\u3067\u521d\u671f\u5316\u3057\u305f\u3042\u3068\u3001\u9069\u5f53\u306a\u8981\u7d20\u3092\u6587\u5b57\u5217\u90e8\u5206\u3067`v`\u3067\u4e0a\u66f8\u304d\u3059\u308b\u2015\u2015\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u30ed\u30b8\u30c3\u30af\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3082\u3046\u5c11\u3057C#\u3089\u3057\u3044\u66f8\u304d\u65b9\u304c\u3042\u308b\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u304c\u3001C#\u521d\u5fc3\u8005\u3068\u3057\u3066\u306f\u6e80\u8db3\u306a\u51fa\u6765\u4e0a\u304c\u308a\u3067\u3059\u3002\n\n\u6b21\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3002\u304b\u306a\u308a\u96d1\u3001\u3068\u3044\u3046\u304b\u30b3\u30d4\u30da\u3067\u4f5c\u3063\u305f\u611f\u6e80\u8f09(\u00b4\u30fb\u03c9\u30fb\uff40) \u6b63\u76f4\u306a\u3068\u3053\u308dNUnit\u304c\u3088\u304f\u308f\u304b\u3063\u3066\u304a\u3089\u305a\u3001\u96f0\u56f2\u6c17\u3067\u4f7f\u3063\u3066\u3044\u308b\u9762\u306f\u591a\u3005\u3042\u308a\u307e\u3059\u3002\u935b\u932c\u304c\u8db3\u308a\u306c(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n```csharp:ProgramTest.cs\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace Tests\n{\n    [TestClass()]\n    public class ProgramTests\n    {\n        [TestMethod()]\n        public void DrawTest1()\n        {\n            Assert.AreEqual(\"v\", Program.Draw(1));\n        }\n\n        [TestMethod()]\n        public void DrawTest2()\n        {\n            Assert.AreEqual(\"invalid\", Program.Draw(2));\n        }\n\n        [TestMethod()]\n        public void DrawTest3()\n        {\n            var expected = \"v.v?v.v?.v.\".Replace(\"?\", System.Environment.NewLine);\n            Assert.AreEqual(expected, Program.Draw(3));\n        }\n\n        [TestMethod()]\n        public void DrawTest5()\n        {\n\n            var expected = \"v...v?v...v?.v.v.?.v.v.?..v..\".Replace(\"?\", System.Environment.NewLine);\n            Assert.AreEqual(expected, Program.Draw(5));\n        }\n    }\n}\n```\n\n\u95a2\u9023\u30ea\u30f3\u30af:\n\n- https://codeiq.jp/q/3526\n- https://twitter.com/tbpgr/status/953643033991438336\n- http://tbpgr.hatenablog.com/entry/2018/01/17/235711\n- https://togetter.com/li/1184198\n", "coediting": false, "comments_count": 0, "created_at": "2018-01-18T21:40:53+09:00", "group": null, "id": "821ea42582de973aad65", "likes_count": 1, "private": false, "reactions_count": 0, "tags": [{"name": "C#", "versions": []}, {"name": "codeiq", "versions": []}], "title": "CodeIQ\u300c\u9032\u6357\u30f4\u30a7\u30ea\u30fc\u30b0\u30c3\u30c9\u30de\u30fc\u30af\u300d\u554f\u984c\u306b\u53c2\u52a0\u3057\u307e\u3057\u305f", "updated_at": "2018-01-18T21:40:53+09:00", "url": "https://qiita.com/neko_the_shadow/items/821ea42582de973aad65", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}