{"rendered_body": "<p>\u3082\u3068\u306d\u305f: <a href=\"https://qiita.com/tbpgr/items/0567699ba083158804ac\" id=\"reference-1f1a00a6c115e2c7d864\">\u305a\u3093\u3060\u306e\u83f1\u5f62\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u554f\u984c Ruby\u7de8</a></p>\n\n<p>Python3\u3067\u3001\u307e\u305a\u306f\u300c\u3075\u3064\u3046\u300d\u306b\u56de\u7b54\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3082\u3068\u306d\u305f\u3067\u306f\u5b9f\u884c\u6642\u5f15\u6570\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306e\u89e3\u7b54\u3067\u306f\u6a19\u6e96\u5165\u529b\u306e1\u884c\u76ee\u3092n\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"nf\">draw</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s\">'invalid'</span>\n\n    <span class=\"n\">mid</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n    <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s\">'_'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)]</span>\n    <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">),</span> <span class=\"s\">'abcdefghijklmnopqrstuvwxyz'</span><span class=\"p\">):</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">mid</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">mid</span>\n        <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">mid</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">mid</span> <span class=\"o\">-</span> <span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">alphabet</span>\n\n    <span class=\"k\">return</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">matrix</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n</pre></div></div>\n\n<p>\u6b21\u306fPython3\u306e\u300c\u3075\u3064\u3046\u300d\u3067\u306f\u306a\u3044\u89e3\u7b54\u3001\u3064\u307e\u308a1\u884c\u91ce\u90ce\u3067\u89e3\u3044\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3082\u300c\u3075\u3064\u3046\u300d\u306e\u89e3\u7b54\u3068\u540c\u69d8\u306b\u6a19\u6e96\u5165\u529b\u306e1\u884c\u76ee\u3092n\u3068\u3057\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"k\">print</span><span class=\"p\">((</span><span class=\"k\">lambda</span> <span class=\"n\">n</span> <span class=\"p\">:</span> <span class=\"s\">'invalid'</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ch</span> <span class=\"k\">if</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">))</span> <span class=\"k\">else</span> <span class=\"s\">'_'</span> <span class=\"k\">for</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">ch</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">),</span> <span class=\"s\">'abcdefghijklmnopqrstuvwxyz'</span><span class=\"p\">)))(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())))</span>\n</pre></div></div>\n\n<p>\u305f\u3068\u3048\u3070Python3\u306eREPL\u306a\u3069\u3092\u3064\u304b\u3063\u3066\u3001\u4e0a\u8a18\u306e1\u884c\u91ce\u90ce\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u60f3\u5b9a\u901a\u308a\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ python3\nPython 3.6.5 (default, Apr  1 2018, 05:46:30)\n[GCC 7.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; print((lambda n : 'invalid' if n % 2 == 0 else '\\n'.join(''.join(ch if y in (abs(n // 2 - x), (n - 1) - abs(n // 2 - x)) else '_' for y in range(n)) for x, ch in zip(range(n), 'abcdefghijklmnopqrstuvwxyz')))(int(input())))\n5\n__a__\n_b_b_\nc___c\n_d_d_\n__e__\n&gt;&gt;&gt; print((lambda n : 'invalid' if n % 2 == 0 else '\\n'.join(''.join(ch if y in (abs(n // 2 - x), (n - 1) - abs(n // 2 - x)) else '_' for y in range(n)) for x, ch in zip(range(n), 'abcdefghijklmnopqrstuvwxyz')))(int(input())))\n2\ninvalid\n</pre></div></div>\n\n<hr>\n\n<p>Python3\u3060\u3051\u3067\u306f\u3055\u307f\u3057\u3044\u306e\u3067SQL\u3067\u3082\u89e3\u7b54\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u304c\u305d\u306e\u89e3\u7b54\u306b\u306a\u308a\u307e\u3059\u3002<br>\n\u5165\u529b\u306f\u30d0\u30a4\u30f3\u30c9\u5909\u6570<code>:N</code>\u3068\u3057\u30661\u304b\u308925\u307e\u3067\u306e\u6574\u6570\u3092\u4e0e\u3048\u307e\u3059\u3002\u52d5\u4f5c\u78ba\u8a8d\u306b\u306fPostgreSQL 10.5\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8a00\u8a9e\u4f9d\u5b58\u306e\u6a5f\u80fd\u306f\u3055\u307b\u3069\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u591a\u5c11\u306e\u8aad\u307f\u66ff\u3048\u306a\u3069\u306f\u3042\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u57fa\u672c\u7684\u306b\u306f\u307b\u304b\u306eDBMS\u3067\u3082\u52d5\u304f--\u306f\u305a(\u00b4\u30fb\u03c9\u30fb\uff40)</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">WITH</span> \n<span class=\"k\">RECURSIVE</span> <span class=\"n\">alphabets</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span><span class=\"p\">,</span> <span class=\"n\">list</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n    <span class=\"k\">SELECT</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"k\">NULL</span><span class=\"p\">,</span> <span class=\"s1\">'abcdefghijklmnopqrstuvwxyz'</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span>\n    <span class=\"k\">SELECT</span>\n      <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n      <span class=\"k\">SUBSTRING</span><span class=\"p\">(</span><span class=\"n\">list</span> <span class=\"k\">FROM</span> <span class=\"mi\">1</span> <span class=\"k\">FOR</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n      <span class=\"k\">SUBSTRING</span><span class=\"p\">(</span><span class=\"n\">list</span> <span class=\"k\">FROM</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">FROM</span> <span class=\"n\">alphabets</span>\n    <span class=\"k\">WHERE</span> <span class=\"k\">LENGTH</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"p\">),</span>\n<span class=\"k\">rows</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"k\">row</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n  <span class=\"k\">SELECT</span>\n    <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> \n    <span class=\"n\">STRING_AGG</span> <span class=\"p\">(</span>\n      <span class=\"k\">CASE</span> <span class=\"k\">WHEN</span> <span class=\"n\">a2</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"k\">IN</span> <span class=\"p\">(</span><span class=\"k\">ABS</span><span class=\"p\">(:</span><span class=\"n\">N</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"k\">ABS</span><span class=\"p\">(:</span><span class=\"n\">N</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"k\">ABS</span><span class=\"p\">(:</span><span class=\"n\">N</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">)))</span> <span class=\"k\">THEN</span> <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">alphabet</span> <span class=\"k\">ELSE</span> <span class=\"s1\">'_'</span> <span class=\"k\">END</span><span class=\"p\">,</span> \n      <span class=\"s1\">''</span> \n      <span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">a2</span><span class=\"p\">.</span><span class=\"n\">x</span>\n    <span class=\"p\">)</span>\n  <span class=\"k\">FROM</span> <span class=\"n\">alphabets</span> <span class=\"n\">a1</span> <span class=\"k\">CROSS</span> <span class=\"k\">JOIN</span> <span class=\"n\">alphabets</span> <span class=\"n\">a2</span>\n  <span class=\"k\">WHERE</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"k\">AND</span> <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"p\">:</span><span class=\"n\">N</span>\n  <span class=\"k\">AND</span>   <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">a2</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"k\">AND</span> <span class=\"n\">a2</span><span class=\"p\">.</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"p\">:</span><span class=\"n\">N</span>\n  <span class=\"k\">GROUP</span> <span class=\"k\">BY</span> <span class=\"n\">a1</span><span class=\"p\">.</span><span class=\"n\">x</span>\n<span class=\"p\">)</span>\n<span class=\"k\">SELECT</span>\n  <span class=\"k\">CASE</span> <span class=\"k\">WHEN</span> <span class=\"p\">:</span><span class=\"n\">N</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> <span class=\"k\">THEN</span> <span class=\"s1\">'invalid'</span> <span class=\"k\">ELSE</span> <span class=\"n\">STRING_AGG</span><span class=\"p\">(</span><span class=\"k\">row</span><span class=\"p\">,</span> <span class=\"n\">chr</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">END</span> <span class=\"k\">AS</span> <span class=\"n\">answer</span>\n<span class=\"k\">FROM</span> <span class=\"k\">rows</span>\n</pre></div></div>\n\n<p>\u3053\u306eSQL\u3092\u30d5\u30a1\u30a4\u30eb<code>zunda.sql</code>\u306b\u4fdd\u5b58\u3057\u3001\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002<code>psql</code>\u30b3\u30de\u30f3\u30c9\u3067\u306f<code>-v</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u3001\u30d0\u30a4\u30f3\u30c9\u5909\u6570\u306b\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ psql -d sandbox -U postgres -v N=24 -f zunda.sql\n answer\n---------\n invalid\n(1 row)\n\n$ psql -d sandbox -U postgres -v N=25 -f zunda.sql\n          answer\n---------------------------\n ____________a____________+\n ___________b_b___________+\n __________c___c__________+\n _________d_____d_________+\n ________e_______e________+\n _______f_________f_______+\n ______g___________g______+\n _____h_____________h_____+\n ____i_______________i____+\n ___j_________________j___+\n __k___________________k__+\n _l_____________________l_+\n m_______________________m+\n _n_____________________n_+\n __o___________________o__+\n ___p_________________p___+\n ____q_______________q____+\n _____r_____________r_____+\n ______s___________s______+\n _______t_________t_______+\n ________u_______u________+\n _________v_____v_________+\n __________w___w__________+\n ___________x_x___________+\n ____________y____________\n(1 row)\n</pre></div></div>\n", "body": "\u3082\u3068\u306d\u305f: [\u305a\u3093\u3060\u306e\u83f1\u5f62\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u554f\u984c Ruby\u7de8](https://qiita.com/tbpgr/items/0567699ba083158804ac)\n\nPython3\u3067\u3001\u307e\u305a\u306f\u300c\u3075\u3064\u3046\u300d\u306b\u56de\u7b54\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3082\u3068\u306d\u305f\u3067\u306f\u5b9f\u884c\u6642\u5f15\u6570\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306e\u89e3\u7b54\u3067\u306f\u6a19\u6e96\u5165\u529b\u306e1\u884c\u76ee\u3092n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n```python\ndef draw(n):\n    if n % 2 == 0:\n        return 'invalid'\n    \n    mid = n // 2\n    matrix = [['_'] * n for _ in range(n)]\n    for x, alphabet in zip(range(n), 'abcdefghijklmnopqrstuvwxyz'):\n        y = abs(mid - x) - mid\n        matrix[x][mid + y] = matrix[x][mid - y] = alphabet\n    \n    return '\\n'.join(''.join(row) for row in matrix)\n\nif __name__ == '__main__':\n    n = int(input())\n    print(draw(n))\n```\n\n\u6b21\u306fPython3\u306e\u300c\u3075\u3064\u3046\u300d\u3067\u306f\u306a\u3044\u89e3\u7b54\u3001\u3064\u307e\u308a1\u884c\u91ce\u90ce\u3067\u89e3\u3044\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3082\u300c\u3075\u3064\u3046\u300d\u306e\u89e3\u7b54\u3068\u540c\u69d8\u306b\u6a19\u6e96\u5165\u529b\u306e1\u884c\u76ee\u3092n\u3068\u3057\u307e\u3059\u3002\n\n```python\nprint((lambda n : 'invalid' if n % 2 == 0 else '\\n'.join(''.join(ch if y in (abs(n // 2 - x), (n - 1) - abs(n // 2 - x)) else '_' for y in range(n)) for x, ch in zip(range(n), 'abcdefghijklmnopqrstuvwxyz')))(int(input())))\n```\n\n\u305f\u3068\u3048\u3070Python3\u306eREPL\u306a\u3069\u3092\u3064\u304b\u3063\u3066\u3001\u4e0a\u8a18\u306e1\u884c\u91ce\u90ce\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u60f3\u5b9a\u901a\u308a\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```\n$ python3\nPython 3.6.5 (default, Apr  1 2018, 05:46:30)\n[GCC 7.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print((lambda n : 'invalid' if n % 2 == 0 else '\\n'.join(''.join(ch if y in (abs(n // 2 - x), (n - 1) - abs(n // 2 - x)) else '_' for y in range(n)) for x, ch in zip(range(n), 'abcdefghijklmnopqrstuvwxyz')))(int(input())))\n5\n__a__\n_b_b_\nc___c\n_d_d_\n__e__\n>>> print((lambda n : 'invalid' if n % 2 == 0 else '\\n'.join(''.join(ch if y in (abs(n // 2 - x), (n - 1) - abs(n // 2 - x)) else '_' for y in range(n)) for x, ch in zip(range(n), 'abcdefghijklmnopqrstuvwxyz')))(int(input())))\n2\ninvalid\n```\n\n***\n\nPython3\u3060\u3051\u3067\u306f\u3055\u307f\u3057\u3044\u306e\u3067SQL\u3067\u3082\u89e3\u7b54\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u304c\u305d\u306e\u89e3\u7b54\u306b\u306a\u308a\u307e\u3059\u3002\n\u5165\u529b\u306f\u30d0\u30a4\u30f3\u30c9\u5909\u6570`:N`\u3068\u3057\u30661\u304b\u308925\u307e\u3067\u306e\u6574\u6570\u3092\u4e0e\u3048\u307e\u3059\u3002\u52d5\u4f5c\u78ba\u8a8d\u306b\u306fPostgreSQL 10.5\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u8a00\u8a9e\u4f9d\u5b58\u306e\u6a5f\u80fd\u306f\u3055\u307b\u3069\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u591a\u5c11\u306e\u8aad\u307f\u66ff\u3048\u306a\u3069\u306f\u3042\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u57fa\u672c\u7684\u306b\u306f\u307b\u304b\u306eDBMS\u3067\u3082\u52d5\u304f--\u306f\u305a(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n```sql\nWITH \nRECURSIVE alphabets(x, alphabet, list) AS (\n    SELECT -1, NULL, 'abcdefghijklmnopqrstuvwxyz'\n  UNION ALL\n    SELECT\n      x + 1,\n      SUBSTRING(list FROM 1 FOR 1),\n      SUBSTRING(list FROM 2)\n    FROM alphabets\n    WHERE LENGTH(list) > 0\n),\nrows(x, row) AS (\n  SELECT\n    a1.x, \n    STRING_AGG (\n      CASE WHEN a2.x IN (ABS(:N / 2 - a1.x), ABS(:N - 1 - ABS(:N / 2 - a1.x))) THEN a1.alphabet ELSE '_' END, \n      '' \n      ORDER BY a2.x\n    )\n  FROM alphabets a1 CROSS JOIN alphabets a2\n  WHERE 0 <= a1.x AND a1.x < :N\n  AND   0 <= a2.x AND a2.x < :N\n  GROUP BY a1.x\n)\nSELECT\n  CASE WHEN :N % 2 = 0 THEN 'invalid' ELSE STRING_AGG(row, chr(10) ORDER BY x) END AS answer\nFROM rows\n```\n\n\u3053\u306eSQL\u3092\u30d5\u30a1\u30a4\u30eb`zunda.sql`\u306b\u4fdd\u5b58\u3057\u3001\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002`psql`\u30b3\u30de\u30f3\u30c9\u3067\u306f`-v`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u3001\u30d0\u30a4\u30f3\u30c9\u5909\u6570\u306b\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n$ psql -d sandbox -U postgres -v N=24 -f zunda.sql\n answer\n---------\n invalid\n(1 row)\n\n$ psql -d sandbox -U postgres -v N=25 -f zunda.sql\n          answer\n---------------------------\n ____________a____________+\n ___________b_b___________+\n __________c___c__________+\n _________d_____d_________+\n ________e_______e________+\n _______f_________f_______+\n ______g___________g______+\n _____h_____________h_____+\n ____i_______________i____+\n ___j_________________j___+\n __k___________________k__+\n _l_____________________l_+\n m_______________________m+\n _n_____________________n_+\n __o___________________o__+\n ___p_________________p___+\n ____q_______________q____+\n _____r_____________r_____+\n ______s___________s______+\n _______t_________t_______+\n ________u_______u________+\n _________v_____v_________+\n __________w___w__________+\n ___________x_x___________+\n ____________y____________\n(1 row)\n```\n", "coediting": false, "comments_count": 1, "created_at": "2018-11-06T23:40:38+09:00", "group": null, "id": "532f7a48cf384b3f23bf", "likes_count": 2, "private": false, "reactions_count": 0, "tags": [{"name": "SQL", "versions": []}, {"name": "Python3", "versions": []}], "title": "\u305a\u3093\u3060\u306e\u83f1\u5f62\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u554f\u984c Python3 & SQL\u7de8", "updated_at": "2018-11-06T23:40:38+09:00", "url": "https://qiita.com/neko_the_shadow/items/532f7a48cf384b3f23bf", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}