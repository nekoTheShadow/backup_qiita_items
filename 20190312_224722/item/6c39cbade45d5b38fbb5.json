{"rendered_body": "<p>\u30bf\u30a4\u30c8\u30eb\u304c\u9577\u3044(\u00b4\u30fb\u03c9\u30fb\uff40) \u305f\u3060\u3053\u3046\u66f8\u304f\u307b\u304b\u306a\u3044(\u00b4\u30fb\u03c9\u30fb\uff40) \u63b2\u984c\u306e\u901a\u308a<a href=\"https://techplay.jp/column/298?utm_source=column_298&amp;utm_medium=social&amp;utm_campaign=feed&amp;utm_content=tw0\" rel=\"nofollow noopener\" target=\"_blank\">TECH PLAY\u300c\u5b9a\u756a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u9000\u5c48\uff1f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u3082\u3063\u3068\u697d\u3057\u304f\u5b66\u307c\u3046\uff01\u300d</a>\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\u89e3\u7b54\u5185\u5bb9\u306f\u81ea\u7531\u306b\u516c\u958b\u3057\u3066\u3088\u3044\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u305b\u3063\u304b\u304f\u3067\u3059\u3057\u3001Qiita\u306b\u3055\u3089\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<p>\u8a73\u7d30\u306a\u554f\u984c\u5185\u5bb9\u306f\u5f53\u8a72\u8a18\u4e8b\u3092\u898b\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u304a\u304a\u3088\u305d\u306e\u5185\u5bb9\u3068\u3057\u3066\u306f\u300c3x3\u306e\u9b54\u6cd5\u9663\u3092\u751f\u6210\u3059\u308b\u3002\u9b54\u6cd5\u9663\u3092\u69cb\u6210\u3059\u308b\u6570\u5b57\u306fn\u304b\u3089n+8\u307e\u3067(n\u306f1\u4ee5\u4e0a10\u4ee5\u4e0b)\u300d\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u307e\u305a\u601d\u3044\u3064\u304f\u306e\u306f\u300c\u8003\u3048\u3046\u308b\u3059\u3079\u3066\u306e\u76e4\u9762\u3092\u751f\u6210\u3057\u3066\u3001\u305d\u306e\u3046\u3061\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3060\u3051\u3092pickup\u3059\u308b\u300d\u3068\u3044\u3046\u89e3\u6cd5\u3067\u3057\u3087\u3046\u304b\u3002\u8981\u306f\u5168\u63a2\u7d22\u3059\u308b\u308f\u3051\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"ruby\">\n<div class=\"code-lang\"><span class=\"bold\">wrong.rb</span></div>\n<div class=\"highlight\"><pre><span class=\"c1\">#</span>\n<span class=\"c1\"># \u8003\u3048\u3046\u308b\u9b54\u6cd5\u9663\u3092\u3059\u3079\u3066\u751f\u6210\u3057\u3066\u3001\u305d\u306e\u3046\u3061\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3060\u3051\u3092pickup\u3059\u308b\u3002</span>\n<span class=\"c1\"># @param n \u554f\u984c\u6587\u306b\u3042\u308b\"n\"(1..10)</span>\n<span class=\"c1\"># @return \u6761\u4ef6\u3092\u6e80\u305f\u3059\u9b54\u6cd5\u9663\u306e\u4e00\u89a7</span>\n<span class=\"c1\">#</span>\n<span class=\"k\">def</span> <span class=\"nf\">solve</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n  <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"n\">n</span><span class=\"o\">..</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">8</span><span class=\"p\">)].</span><span class=\"nf\">permutation</span><span class=\"p\">.</span><span class=\"nf\">with_object</span><span class=\"p\">([])</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">digits</span><span class=\"p\">,</span> <span class=\"n\">squares</span><span class=\"o\">|</span>\n    <span class=\"n\">square</span> <span class=\"o\">=</span> <span class=\"n\">digits</span><span class=\"p\">.</span><span class=\"nf\">each_slice</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"nf\">to_a</span>    \n    <span class=\"n\">totals</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n      <span class=\"o\">*</span><span class=\"n\">square</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"ss\">:sum</span><span class=\"p\">),</span>                   <span class=\"c1\"># \u7e26\u65b9\u5411</span>\n      <span class=\"o\">*</span><span class=\"n\">square</span><span class=\"p\">.</span><span class=\"nf\">transpose</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"ss\">:sum</span><span class=\"p\">),</span>         <span class=\"c1\"># \u6a2a\u65b9\u5411</span>\n      <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">...</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">x</span><span class=\"p\">]}.</span><span class=\"nf\">sum</span><span class=\"p\">,</span>    <span class=\"c1\"># \u53f3\u306a\u306a\u3081</span>\n      <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">...</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">]}.</span><span class=\"nf\">sum</span> <span class=\"c1\"># \u5de6\u306a\u306a\u3081</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">squares</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">square</span> <span class=\"k\">if</span> <span class=\"n\">totals</span><span class=\"p\">.</span><span class=\"nf\">uniq</span><span class=\"p\">.</span><span class=\"nf\">length</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># 3x3\u306e\u9b54\u6cd5\u9663\u3092pretty-print\u3059\u308b\u3002</span>\n<span class=\"c1\"># \u88dc\u52a9\u95a2\u6570=\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u306b\u306f\u7121\u95a2\u4fc2\u3002</span>\n<span class=\"c1\">#</span>\n<span class=\"k\">def</span> <span class=\"nf\">pprint</span><span class=\"p\">(</span><span class=\"n\">squares</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">...</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span>\n    <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">squares</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">square</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]}</span>\n    <span class=\"nb\">puts</span> <span class=\"n\">rows</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">row</span><span class=\"o\">|</span>\n      <span class=\"n\">row</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"s2\">\"%02d\"</span><span class=\"p\">,</span> <span class=\"n\">digit</span><span class=\"p\">)}.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">)</span>\n    <span class=\"p\">}.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"s1\">' | '</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">if</span> <span class=\"kp\">__FILE__</span> <span class=\"o\">==</span> <span class=\"vg\">$0</span>\n  <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">10</span><span class=\"p\">).</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n    <span class=\"n\">squares</span> <span class=\"o\">=</span> <span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"[ n=</span><span class=\"si\">#{</span><span class=\"n\">n</span><span class=\"si\">}</span><span class=\"s2\"> ]\"</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">squares</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></div>\n</div>\n\n<p>\u3053\u306e\u5b9f\u884c\u7d50\u679c\u304c\u4ee5\u4e0b\u306e\u901a\u308a\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ time ruby wrong.rb\n[ n=1 ]\n02,07,06 | 02,09,04 | 04,03,08 | 04,09,02 | 06,01,08 | 06,07,02 | 08,01,06 | 08,03,04\n09,05,01 | 07,05,03 | 09,05,01 | 03,05,07 | 07,05,03 | 01,05,09 | 03,05,07 | 01,05,09\n04,03,08 | 06,01,08 | 02,07,06 | 08,01,06 | 02,09,04 | 08,03,04 | 04,09,02 | 06,07,02\n[ n=2 ]\n03,08,07 | 03,10,05 | 05,04,09 | 05,10,03 | 07,02,09 | 07,08,03 | 09,02,07 | 09,04,05\n10,06,02 | 08,06,04 | 10,06,02 | 04,06,08 | 08,06,04 | 02,06,10 | 04,06,08 | 02,06,10\n05,04,09 | 07,02,09 | 03,08,07 | 09,02,07 | 03,10,05 | 09,04,05 | 05,10,03 | 07,08,03\n[ n=3 ]\n04,09,08 | 04,11,06 | 06,05,10 | 06,11,04 | 08,03,10 | 08,09,04 | 10,03,08 | 10,05,06\n11,07,03 | 09,07,05 | 11,07,03 | 05,07,09 | 09,07,05 | 03,07,11 | 05,07,09 | 03,07,11\n06,05,10 | 08,03,10 | 04,09,08 | 10,03,08 | 04,11,06 | 10,05,06 | 06,11,04 | 08,09,04\n[ n=4 ]\n05,10,09 | 05,12,07 | 07,06,11 | 07,12,05 | 09,04,11 | 09,10,05 | 11,04,09 | 11,06,07\n12,08,04 | 10,08,06 | 12,08,04 | 06,08,10 | 10,08,06 | 04,08,12 | 06,08,10 | 04,08,12\n07,06,11 | 09,04,11 | 05,10,09 | 11,04,09 | 05,12,07 | 11,06,07 | 07,12,05 | 09,10,05\n[ n=5 ]\n06,11,10 | 06,13,08 | 08,07,12 | 08,13,06 | 10,05,12 | 10,11,06 | 12,05,10 | 12,07,08\n13,09,05 | 11,09,07 | 13,09,05 | 07,09,11 | 11,09,07 | 05,09,13 | 07,09,11 | 05,09,13\n08,07,12 | 10,05,12 | 06,11,10 | 12,05,10 | 06,13,08 | 12,07,08 | 08,13,06 | 10,11,06\n[ n=6 ]\n07,12,11 | 07,14,09 | 09,08,13 | 09,14,07 | 11,06,13 | 11,12,07 | 13,06,11 | 13,08,09\n14,10,06 | 12,10,08 | 14,10,06 | 08,10,12 | 12,10,08 | 06,10,14 | 08,10,12 | 06,10,14\n09,08,13 | 11,06,13 | 07,12,11 | 13,06,11 | 07,14,09 | 13,08,09 | 09,14,07 | 11,12,07\n[ n=7 ]\n08,13,12 | 08,15,10 | 10,09,14 | 10,15,08 | 12,07,14 | 12,13,08 | 14,07,12 | 14,09,10\n15,11,07 | 13,11,09 | 15,11,07 | 09,11,13 | 13,11,09 | 07,11,15 | 09,11,13 | 07,11,15\n10,09,14 | 12,07,14 | 08,13,12 | 14,07,12 | 08,15,10 | 14,09,10 | 10,15,08 | 12,13,08\n[ n=8 ]\n09,14,13 | 09,16,11 | 11,10,15 | 11,16,09 | 13,08,15 | 13,14,09 | 15,08,13 | 15,10,11\n16,12,08 | 14,12,10 | 16,12,08 | 10,12,14 | 14,12,10 | 08,12,16 | 10,12,14 | 08,12,16\n11,10,15 | 13,08,15 | 09,14,13 | 15,08,13 | 09,16,11 | 15,10,11 | 11,16,09 | 13,14,09\n[ n=9 ]\n10,15,14 | 10,17,12 | 12,11,16 | 12,17,10 | 14,09,16 | 14,15,10 | 16,09,14 | 16,11,12\n17,13,09 | 15,13,11 | 17,13,09 | 11,13,15 | 15,13,11 | 09,13,17 | 11,13,15 | 09,13,17\n12,11,16 | 14,09,16 | 10,15,14 | 16,09,14 | 10,17,12 | 16,11,12 | 12,17,10 | 14,15,10\n[ n=10 ]\n11,16,15 | 11,18,13 | 13,12,17 | 13,18,11 | 15,10,17 | 15,16,11 | 17,10,15 | 17,12,13\n18,14,10 | 16,14,12 | 18,14,10 | 12,14,16 | 16,14,12 | 10,14,18 | 12,14,16 | 10,14,18\n13,12,17 | 15,10,17 | 11,16,15 | 17,10,15 | 11,18,13 | 17,12,13 | 13,18,11 | 15,16,11\n\nreal    0m34.338s\nuser    0m33.750s\nsys     0m0.203s\n</pre></div></div>\n\n<p>\u308f\u305f\u3057\u306e\u74b0\u5883\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u304b\u3089\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u304a\u3088\u305d35\u79d2\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u30029!=362880\u901a\u308a\u306e\u76e4\u9762\u3092\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3050\u3089\u3044\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u306e\u306f\u4ed5\u65b9\u304c\u306a\u3044--\u3068\u3044\u3046\u3088\u308a\u306f35\u4e07\u4ef6\u4ee5\u4e0a\u63a2\u7d22\u3057\u3066\u3082\u3053\u306e\u7a0b\u5ea6\u306e\u6642\u9593\u3067\u6e08\u3080\u3068\u3044\u3046\u5370\u8c61\u306e\u307b\u3046\u304c\u5f37\u3044\u304b\u3082(\u00b4\u30fb\u03c9\u30fb\uff40) </p>\n\n<p>\u305d\u308c\u306f\u3055\u3066\u304a\u304d\u3001\u3082\u3046\u5c11\u3057\u52b9\u7387\u306e\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u305f\u3068\u3048\u3070n=1\u306e\u3068\u304d\u306f15\u3068\u3044\u3046\u3088\u3046\u306b\u30011\u5217\u306e\u5408\u8a08\u5024\u306f\u4e8b\u524d\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a1\u5217\u306e\u3046\u30612\u30de\u30b9\u307e\u3067\u6c7a\u307e\u308c\u3070\u3001\u6700\u5f8c\u306e1\u30de\u30b9\u306f\u81ea\u52d5\u3067\u6c7a\u307e\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u300c\u6700\u5f8c\u306e1\u30de\u30b9\u306b\u6570\u5b57\u3092\u8a2d\u5b9a\u3059\u308b\u969b\u3001\u7e26/\u6a2a/\u306a\u306a\u3081\u65b9\u5411\u306b\u5408\u8a08\u5024\u306e\u691c\u67fb\u3092\u884c\u3063\u3066\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u6642\u70b9\u3067\u63a2\u7d22\u3092\u3084\u3081\u308b\u300d\u3068\u3044\u3046\u679d\u5208\u308a\u3092\u5b9f\u65bd\u3059\u308c\u3070\u3001\u5358\u7d14\u306a\u5168\u63a2\u7d22\u3088\u308a\u306f\u63a2\u7d22\u91cf\u304c\u6e1b\u308b\u306f\u305a\u3067\u3059\u3002\u305d\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"ruby\">\n<div class=\"code-lang\"><span class=\"bold\">main.rb</span></div>\n<div class=\"highlight\"><pre><span class=\"c1\">#</span>\n<span class=\"c1\"># \u5e45\u512a\u5148\u63a2\u7d22\u3067\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\u9b54\u6cd5\u9663\u3092\u63a2\u3059\u3002</span>\n<span class=\"c1\"># \u300c\u63a2\u7d22\u4e2d\u306b\u305d\u306e\u9b54\u6cd5\u9663\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001</span>\n<span class=\"c1\"># \u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u63a2\u7d22\u3092\u3084\u3081\u308b\u300d\u3068\u3044\u3046\u679d\u5208\u308a\u3092\u884c\u3063\u3066\u3001\u63a2\u7d22\u91cf\u3092\u6e1b\u3089\u3059\u3002</span>\n<span class=\"c1\"># @param n \u554f\u984c\u6587\u306b\u3042\u308b\"n\"(1..10)</span>\n<span class=\"c1\"># @return \u6761\u4ef6\u3092\u6e80\u305f\u3059\u9b54\u6cd5\u9663\u306e\u4e00\u89a7</span>\n<span class=\"c1\">#</span>\n<span class=\"k\">def</span> <span class=\"nf\">solve</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n  <span class=\"n\">lo</span><span class=\"p\">,</span> <span class=\"n\">hi</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">8</span>\n  <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">lo</span><span class=\"o\">..</span><span class=\"n\">hi</span><span class=\"p\">).</span><span class=\"nf\">sum</span> <span class=\"o\">/</span> <span class=\"mi\">3</span>\n\n  <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">lo</span><span class=\"o\">..</span><span class=\"n\">hi</span><span class=\"p\">).</span><span class=\"nf\">map</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span>\n    <span class=\"n\">square</span> <span class=\"o\">=</span> <span class=\"no\">Array</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">){</span> <span class=\"no\">Array</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n    <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">digit</span>\n    <span class=\"n\">square</span>\n  <span class=\"k\">end</span>\n  <span class=\"n\">squares</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n  <span class=\"k\">until</span> <span class=\"n\">queue</span><span class=\"p\">.</span><span class=\"nf\">empty?</span>\n    <span class=\"n\">square</span> <span class=\"o\">=</span> <span class=\"n\">queue</span><span class=\"p\">.</span><span class=\"nf\">shift</span>\n\n    <span class=\"c1\"># \u6570\u5b57\u304c\u672a\u8a2d\u7f6e\u306e\u5ea7\u6a19\u3092\u63a2\u3059\u3002\u672a\u8a2d\u7f6e\u306e\u5ea7\u6a19\u304c\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u9b54\u6cd5\u9663\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u3044\u3046\u3053\u3068\u3002</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"mi\">0</span><span class=\"o\">...</span><span class=\"mi\">3</span><span class=\"p\">].</span><span class=\"nf\">product</span><span class=\"p\">([</span><span class=\"o\">*</span><span class=\"mi\">0</span><span class=\"o\">...</span><span class=\"mi\">3</span><span class=\"p\">]).</span><span class=\"nf\">find</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">x</span><span class=\"p\">.</span><span class=\"nf\">nil?</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">y</span><span class=\"p\">.</span><span class=\"nf\">nil?</span>\n      <span class=\"n\">squares</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">square</span>\n      <span class=\"k\">next</span>\n    <span class=\"k\">end</span>\n\n    <span class=\"c1\"># \u5ea7\u6a19(x, y)\u306b\u7f6e\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306f\u3001\u305d\u306e\u9b54\u6cd5\u9663\u306b\u304a\u3044\u3066\u3044\u307e\u3060\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u6570\u5b57\u3002</span>\n    <span class=\"c1\"># \u305f\u3060\u3057\u5e95\u8fba\u3084\u53f3\u8fba\u306e\u5ea7\u6a19\u306e\u5834\u5408\u306f\u3001\u7e26\u65b9\u5411\u3084\u6a2a\u65b9\u5411\u3042\u308b\u3044\u306f\u659c\u3081\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3063\u3066\u304a\u304f(=\u679d\u5208\u308a)</span>\n    <span class=\"n\">digits</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"n\">lo</span><span class=\"o\">..</span><span class=\"n\">hi</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">square</span><span class=\"p\">.</span><span class=\"nf\">flatten</span><span class=\"p\">.</span><span class=\"nf\">uniq</span>\n    <span class=\"n\">digits</span><span class=\"p\">.</span><span class=\"nf\">select!</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">digit</span> <span class=\"o\">==</span> <span class=\"n\">total</span><span class=\"p\">}</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>           <span class=\"c1\"># \u5e95\u8fba=\u7e26\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046</span>\n    <span class=\"n\">digits</span><span class=\"p\">.</span><span class=\"nf\">select!</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">digit</span> <span class=\"o\">==</span> <span class=\"n\">total</span><span class=\"p\">}</span> <span class=\"k\">if</span> <span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>           <span class=\"c1\"># \u53f3\u8fba=\u6a2a\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046</span>\n    <span class=\"n\">digits</span><span class=\"p\">.</span><span class=\"nf\">select!</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">digit</span> <span class=\"o\">==</span> <span class=\"n\">total</span><span class=\"p\">}</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"c1\"># \u5de6\u306a\u306a\u3081\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046</span>\n    <span class=\"n\">digits</span><span class=\"p\">.</span><span class=\"nf\">select!</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">digit</span> <span class=\"o\">==</span> <span class=\"n\">total</span><span class=\"p\">}</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"c1\"># \u53f3\u306a\u306a\u3081\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046</span>\n\n    <span class=\"n\">digits</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span>\n      <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">square</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"ss\">:dup</span><span class=\"p\">)</span>\n      <span class=\"n\">temp</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">digit</span>\n      <span class=\"n\">queue</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">temp</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">squares</span>\n<span class=\"k\">end</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># 3x3\u306e\u9b54\u6cd5\u9663\u3092pretty-print\u3059\u308b\u3002</span>\n<span class=\"c1\"># \u88dc\u52a9\u95a2\u6570=\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u306b\u306f\u7121\u95a2\u4fc2\u3002</span>\n<span class=\"c1\">#</span>\n<span class=\"k\">def</span> <span class=\"nf\">pprint</span><span class=\"p\">(</span><span class=\"n\">squares</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">...</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span>\n    <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">squares</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">square</span><span class=\"o\">|</span> <span class=\"n\">square</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]}</span>\n    <span class=\"nb\">puts</span> <span class=\"n\">rows</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">row</span><span class=\"o\">|</span>\n      <span class=\"n\">row</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">digit</span><span class=\"o\">|</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"s2\">\"%02d\"</span><span class=\"p\">,</span> <span class=\"n\">digit</span><span class=\"p\">)}.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">)</span>\n    <span class=\"p\">}.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"s1\">' | '</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">if</span> <span class=\"kp\">__FILE__</span> <span class=\"o\">==</span> <span class=\"vg\">$0</span>\n  <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">10</span><span class=\"p\">).</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n    <span class=\"n\">squares</span> <span class=\"o\">=</span> <span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"[ n=</span><span class=\"si\">#{</span><span class=\"n\">n</span><span class=\"si\">}</span><span class=\"s2\"> ]\"</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">squares</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></div>\n</div>\n\n<p>\u3053\u308c\u3092\u5b9f\u884c\u3057\u305f\u3082\u306e\u304c\u6b21\u306e\u901a\u308a\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ time ruby main.rb\n[ n=1 ]\n02,07,06 | 02,09,04 | 04,03,08 | 04,09,02 | 06,01,08 | 06,07,02 | 08,01,06 | 08,03,04\n09,05,01 | 07,05,03 | 09,05,01 | 03,05,07 | 07,05,03 | 01,05,09 | 03,05,07 | 01,05,09\n04,03,08 | 06,01,08 | 02,07,06 | 08,01,06 | 02,09,04 | 08,03,04 | 04,09,02 | 06,07,02\n[ n=2 ]\n03,08,07 | 03,10,05 | 05,04,09 | 05,10,03 | 07,02,09 | 07,08,03 | 09,02,07 | 09,04,05\n10,06,02 | 08,06,04 | 10,06,02 | 04,06,08 | 08,06,04 | 02,06,10 | 04,06,08 | 02,06,10\n05,04,09 | 07,02,09 | 03,08,07 | 09,02,07 | 03,10,05 | 09,04,05 | 05,10,03 | 07,08,03\n[ n=3 ]\n04,09,08 | 04,11,06 | 06,05,10 | 06,11,04 | 08,03,10 | 08,09,04 | 10,03,08 | 10,05,06\n11,07,03 | 09,07,05 | 11,07,03 | 05,07,09 | 09,07,05 | 03,07,11 | 05,07,09 | 03,07,11\n06,05,10 | 08,03,10 | 04,09,08 | 10,03,08 | 04,11,06 | 10,05,06 | 06,11,04 | 08,09,04\n[ n=4 ]\n05,10,09 | 05,12,07 | 07,06,11 | 07,12,05 | 09,04,11 | 09,10,05 | 11,04,09 | 11,06,07\n12,08,04 | 10,08,06 | 12,08,04 | 06,08,10 | 10,08,06 | 04,08,12 | 06,08,10 | 04,08,12\n07,06,11 | 09,04,11 | 05,10,09 | 11,04,09 | 05,12,07 | 11,06,07 | 07,12,05 | 09,10,05\n[ n=5 ]\n06,11,10 | 06,13,08 | 08,07,12 | 08,13,06 | 10,05,12 | 10,11,06 | 12,05,10 | 12,07,08\n13,09,05 | 11,09,07 | 13,09,05 | 07,09,11 | 11,09,07 | 05,09,13 | 07,09,11 | 05,09,13\n08,07,12 | 10,05,12 | 06,11,10 | 12,05,10 | 06,13,08 | 12,07,08 | 08,13,06 | 10,11,06\n[ n=6 ]\n07,12,11 | 07,14,09 | 09,08,13 | 09,14,07 | 11,06,13 | 11,12,07 | 13,06,11 | 13,08,09\n14,10,06 | 12,10,08 | 14,10,06 | 08,10,12 | 12,10,08 | 06,10,14 | 08,10,12 | 06,10,14\n09,08,13 | 11,06,13 | 07,12,11 | 13,06,11 | 07,14,09 | 13,08,09 | 09,14,07 | 11,12,07\n[ n=7 ]\n08,13,12 | 08,15,10 | 10,09,14 | 10,15,08 | 12,07,14 | 12,13,08 | 14,07,12 | 14,09,10\n15,11,07 | 13,11,09 | 15,11,07 | 09,11,13 | 13,11,09 | 07,11,15 | 09,11,13 | 07,11,15\n10,09,14 | 12,07,14 | 08,13,12 | 14,07,12 | 08,15,10 | 14,09,10 | 10,15,08 | 12,13,08\n[ n=8 ]\n09,14,13 | 09,16,11 | 11,10,15 | 11,16,09 | 13,08,15 | 13,14,09 | 15,08,13 | 15,10,11\n16,12,08 | 14,12,10 | 16,12,08 | 10,12,14 | 14,12,10 | 08,12,16 | 10,12,14 | 08,12,16\n11,10,15 | 13,08,15 | 09,14,13 | 15,08,13 | 09,16,11 | 15,10,11 | 11,16,09 | 13,14,09\n[ n=9 ]\n10,15,14 | 10,17,12 | 12,11,16 | 12,17,10 | 14,09,16 | 14,15,10 | 16,09,14 | 16,11,12\n17,13,09 | 15,13,11 | 17,13,09 | 11,13,15 | 15,13,11 | 09,13,17 | 11,13,15 | 09,13,17\n12,11,16 | 14,09,16 | 10,15,14 | 16,09,14 | 10,17,12 | 16,11,12 | 12,17,10 | 14,15,10\n[ n=10 ]\n11,16,15 | 11,18,13 | 13,12,17 | 13,18,11 | 15,10,17 | 15,16,11 | 17,10,15 | 17,12,13\n18,14,10 | 16,14,12 | 18,14,10 | 12,14,16 | 16,14,12 | 10,14,18 | 12,14,16 | 10,14,18\n13,12,17 | 15,10,17 | 11,16,15 | 17,10,15 | 11,18,13 | 17,12,13 | 13,18,11 | 15,16,11\n\nreal    0m0.618s\nuser    0m0.406s\nsys     0m0.109s\n</pre></div></div>\n\n<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u304b\u3089\u540c\u3058\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u306e\u306b\u5168\u63a2\u7d22\u3067\u306f35\u79d2\u304b\u304b\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u679d\u5208\u308a\u7248\u3067\u306f0.06\u79d2\u306b\u307e\u3067\u7e2e\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u4e0a\u4e0b\u5de6\u53f3\u5bfe\u79f0\u306e\u3082\u306e\u3092\u7701\u3044\u305f\u308a\u3001\u679d\u5208\u308a\u65b9\u6cd5\u3092\u5de5\u592b\u3057\u305f\u308a\u3059\u308c\u3070\u3001\u3088\u308a\u52b9\u7387\u5316\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u3053\u307e\u3067\u5287\u7684\u306a\u6539\u5584\u306f\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093(\u00b4\u30fb\u03c9\u30fb\uff40)</p>\n", "body": "\u30bf\u30a4\u30c8\u30eb\u304c\u9577\u3044(\u00b4\u30fb\u03c9\u30fb\uff40) \u305f\u3060\u3053\u3046\u66f8\u304f\u307b\u304b\u306a\u3044(\u00b4\u30fb\u03c9\u30fb\uff40) \u63b2\u984c\u306e\u901a\u308a[TECH PLAY\u300c\u5b9a\u756a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u9000\u5c48\uff1f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u3082\u3063\u3068\u697d\u3057\u304f\u5b66\u307c\u3046\uff01\u300d](https://techplay.jp/column/298?utm_source=column_298&utm_medium=social&utm_campaign=feed&utm_content=tw0)\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\u89e3\u7b54\u5185\u5bb9\u306f\u81ea\u7531\u306b\u516c\u958b\u3057\u3066\u3088\u3044\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u305b\u3063\u304b\u304f\u3067\u3059\u3057\u3001Qiita\u306b\u3055\u3089\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u8a73\u7d30\u306a\u554f\u984c\u5185\u5bb9\u306f\u5f53\u8a72\u8a18\u4e8b\u3092\u898b\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u304a\u304a\u3088\u305d\u306e\u5185\u5bb9\u3068\u3057\u3066\u306f\u300c3x3\u306e\u9b54\u6cd5\u9663\u3092\u751f\u6210\u3059\u308b\u3002\u9b54\u6cd5\u9663\u3092\u69cb\u6210\u3059\u308b\u6570\u5b57\u306fn\u304b\u3089n+8\u307e\u3067(n\u306f1\u4ee5\u4e0a10\u4ee5\u4e0b)\u300d\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u307e\u305a\u601d\u3044\u3064\u304f\u306e\u306f\u300c\u8003\u3048\u3046\u308b\u3059\u3079\u3066\u306e\u76e4\u9762\u3092\u751f\u6210\u3057\u3066\u3001\u305d\u306e\u3046\u3061\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3060\u3051\u3092pickup\u3059\u308b\u300d\u3068\u3044\u3046\u89e3\u6cd5\u3067\u3057\u3087\u3046\u304b\u3002\u8981\u306f\u5168\u63a2\u7d22\u3059\u308b\u308f\u3051\u3067\u3059\u3002\n\n```ruby:wrong.rb\n#\n# \u8003\u3048\u3046\u308b\u9b54\u6cd5\u9663\u3092\u3059\u3079\u3066\u751f\u6210\u3057\u3066\u3001\u305d\u306e\u3046\u3061\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3060\u3051\u3092pickup\u3059\u308b\u3002\n# @param n \u554f\u984c\u6587\u306b\u3042\u308b\"n\"(1..10)\n# @return \u6761\u4ef6\u3092\u6e80\u305f\u3059\u9b54\u6cd5\u9663\u306e\u4e00\u89a7\n#\ndef solve(n)\n  [*n..(n + 8)].permutation.with_object([]) do |digits, squares|\n    square = digits.each_slice(3).to_a    \n    totals = [\n      *square.map(&:sum),                   # \u7e26\u65b9\u5411\n      *square.transpose.map(&:sum),         # \u6a2a\u65b9\u5411\n      (0...3).map{|x| square[x][x]}.sum,    # \u53f3\u306a\u306a\u3081\n      (0...3).map{|x| square[x][2 - x]}.sum # \u5de6\u306a\u306a\u3081\n    ]\n    squares << square if totals.uniq.length == 1\n  end\nend\n\n#\n# 3x3\u306e\u9b54\u6cd5\u9663\u3092pretty-print\u3059\u308b\u3002\n# \u88dc\u52a9\u95a2\u6570=\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u306b\u306f\u7121\u95a2\u4fc2\u3002\n#\ndef pprint(squares)\n  (0...3).each do |x|\n    rows = squares.map{|square| square[x]}\n    puts rows.map{|row|\n      row.map{|digit| format(\"%02d\", digit)}.join(',')\n    }.join(' | ')\n  end\nend\n\nif __FILE__ == $0\n  (1..10).each do |n|\n    squares = solve(n)\n\n    puts \"[ n=#{n} ]\"\n    pprint(squares)\n  end\nend\n```\n\n\u3053\u306e\u5b9f\u884c\u7d50\u679c\u304c\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```\n$ time ruby wrong.rb\n[ n=1 ]\n02,07,06 | 02,09,04 | 04,03,08 | 04,09,02 | 06,01,08 | 06,07,02 | 08,01,06 | 08,03,04\n09,05,01 | 07,05,03 | 09,05,01 | 03,05,07 | 07,05,03 | 01,05,09 | 03,05,07 | 01,05,09\n04,03,08 | 06,01,08 | 02,07,06 | 08,01,06 | 02,09,04 | 08,03,04 | 04,09,02 | 06,07,02\n[ n=2 ]\n03,08,07 | 03,10,05 | 05,04,09 | 05,10,03 | 07,02,09 | 07,08,03 | 09,02,07 | 09,04,05\n10,06,02 | 08,06,04 | 10,06,02 | 04,06,08 | 08,06,04 | 02,06,10 | 04,06,08 | 02,06,10\n05,04,09 | 07,02,09 | 03,08,07 | 09,02,07 | 03,10,05 | 09,04,05 | 05,10,03 | 07,08,03\n[ n=3 ]\n04,09,08 | 04,11,06 | 06,05,10 | 06,11,04 | 08,03,10 | 08,09,04 | 10,03,08 | 10,05,06\n11,07,03 | 09,07,05 | 11,07,03 | 05,07,09 | 09,07,05 | 03,07,11 | 05,07,09 | 03,07,11\n06,05,10 | 08,03,10 | 04,09,08 | 10,03,08 | 04,11,06 | 10,05,06 | 06,11,04 | 08,09,04\n[ n=4 ]\n05,10,09 | 05,12,07 | 07,06,11 | 07,12,05 | 09,04,11 | 09,10,05 | 11,04,09 | 11,06,07\n12,08,04 | 10,08,06 | 12,08,04 | 06,08,10 | 10,08,06 | 04,08,12 | 06,08,10 | 04,08,12\n07,06,11 | 09,04,11 | 05,10,09 | 11,04,09 | 05,12,07 | 11,06,07 | 07,12,05 | 09,10,05\n[ n=5 ]\n06,11,10 | 06,13,08 | 08,07,12 | 08,13,06 | 10,05,12 | 10,11,06 | 12,05,10 | 12,07,08\n13,09,05 | 11,09,07 | 13,09,05 | 07,09,11 | 11,09,07 | 05,09,13 | 07,09,11 | 05,09,13\n08,07,12 | 10,05,12 | 06,11,10 | 12,05,10 | 06,13,08 | 12,07,08 | 08,13,06 | 10,11,06\n[ n=6 ]\n07,12,11 | 07,14,09 | 09,08,13 | 09,14,07 | 11,06,13 | 11,12,07 | 13,06,11 | 13,08,09\n14,10,06 | 12,10,08 | 14,10,06 | 08,10,12 | 12,10,08 | 06,10,14 | 08,10,12 | 06,10,14\n09,08,13 | 11,06,13 | 07,12,11 | 13,06,11 | 07,14,09 | 13,08,09 | 09,14,07 | 11,12,07\n[ n=7 ]\n08,13,12 | 08,15,10 | 10,09,14 | 10,15,08 | 12,07,14 | 12,13,08 | 14,07,12 | 14,09,10\n15,11,07 | 13,11,09 | 15,11,07 | 09,11,13 | 13,11,09 | 07,11,15 | 09,11,13 | 07,11,15\n10,09,14 | 12,07,14 | 08,13,12 | 14,07,12 | 08,15,10 | 14,09,10 | 10,15,08 | 12,13,08\n[ n=8 ]\n09,14,13 | 09,16,11 | 11,10,15 | 11,16,09 | 13,08,15 | 13,14,09 | 15,08,13 | 15,10,11\n16,12,08 | 14,12,10 | 16,12,08 | 10,12,14 | 14,12,10 | 08,12,16 | 10,12,14 | 08,12,16\n11,10,15 | 13,08,15 | 09,14,13 | 15,08,13 | 09,16,11 | 15,10,11 | 11,16,09 | 13,14,09\n[ n=9 ]\n10,15,14 | 10,17,12 | 12,11,16 | 12,17,10 | 14,09,16 | 14,15,10 | 16,09,14 | 16,11,12\n17,13,09 | 15,13,11 | 17,13,09 | 11,13,15 | 15,13,11 | 09,13,17 | 11,13,15 | 09,13,17\n12,11,16 | 14,09,16 | 10,15,14 | 16,09,14 | 10,17,12 | 16,11,12 | 12,17,10 | 14,15,10\n[ n=10 ]\n11,16,15 | 11,18,13 | 13,12,17 | 13,18,11 | 15,10,17 | 15,16,11 | 17,10,15 | 17,12,13\n18,14,10 | 16,14,12 | 18,14,10 | 12,14,16 | 16,14,12 | 10,14,18 | 12,14,16 | 10,14,18\n13,12,17 | 15,10,17 | 11,16,15 | 17,10,15 | 11,18,13 | 17,12,13 | 13,18,11 | 15,16,11\n\nreal    0m34.338s\nuser    0m33.750s\nsys     0m0.203s\n```\n\n\u308f\u305f\u3057\u306e\u74b0\u5883\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u304b\u3089\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u304a\u3088\u305d35\u79d2\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u30029!=362880\u901a\u308a\u306e\u76e4\u9762\u3092\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3050\u3089\u3044\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u306e\u306f\u4ed5\u65b9\u304c\u306a\u3044--\u3068\u3044\u3046\u3088\u308a\u306f35\u4e07\u4ef6\u4ee5\u4e0a\u63a2\u7d22\u3057\u3066\u3082\u3053\u306e\u7a0b\u5ea6\u306e\u6642\u9593\u3067\u6e08\u3080\u3068\u3044\u3046\u5370\u8c61\u306e\u307b\u3046\u304c\u5f37\u3044\u304b\u3082(\u00b4\u30fb\u03c9\u30fb\uff40) \n\n\u305d\u308c\u306f\u3055\u3066\u304a\u304d\u3001\u3082\u3046\u5c11\u3057\u52b9\u7387\u306e\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u305f\u3068\u3048\u3070n=1\u306e\u3068\u304d\u306f15\u3068\u3044\u3046\u3088\u3046\u306b\u30011\u5217\u306e\u5408\u8a08\u5024\u306f\u4e8b\u524d\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a1\u5217\u306e\u3046\u30612\u30de\u30b9\u307e\u3067\u6c7a\u307e\u308c\u3070\u3001\u6700\u5f8c\u306e1\u30de\u30b9\u306f\u81ea\u52d5\u3067\u6c7a\u307e\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u300c\u6700\u5f8c\u306e1\u30de\u30b9\u306b\u6570\u5b57\u3092\u8a2d\u5b9a\u3059\u308b\u969b\u3001\u7e26/\u6a2a/\u306a\u306a\u3081\u65b9\u5411\u306b\u5408\u8a08\u5024\u306e\u691c\u67fb\u3092\u884c\u3063\u3066\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u6642\u70b9\u3067\u63a2\u7d22\u3092\u3084\u3081\u308b\u300d\u3068\u3044\u3046\u679d\u5208\u308a\u3092\u5b9f\u65bd\u3059\u308c\u3070\u3001\u5358\u7d14\u306a\u5168\u63a2\u7d22\u3088\u308a\u306f\u63a2\u7d22\u91cf\u304c\u6e1b\u308b\u306f\u305a\u3067\u3059\u3002\u305d\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```ruby:main.rb\n#\n# \u5e45\u512a\u5148\u63a2\u7d22\u3067\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\u9b54\u6cd5\u9663\u3092\u63a2\u3059\u3002\n# \u300c\u63a2\u7d22\u4e2d\u306b\u305d\u306e\u9b54\u6cd5\u9663\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\n# \u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u63a2\u7d22\u3092\u3084\u3081\u308b\u300d\u3068\u3044\u3046\u679d\u5208\u308a\u3092\u884c\u3063\u3066\u3001\u63a2\u7d22\u91cf\u3092\u6e1b\u3089\u3059\u3002\n# @param n \u554f\u984c\u6587\u306b\u3042\u308b\"n\"(1..10)\n# @return \u6761\u4ef6\u3092\u6e80\u305f\u3059\u9b54\u6cd5\u9663\u306e\u4e00\u89a7\n#\ndef solve(n)\n  lo, hi = n, n + 8\n  total = (lo..hi).sum / 3\n\n  queue = (lo..hi).map do |digit|\n    square = Array.new(3){ Array.new(3, 0) }\n    square[0][0] = digit\n    square\n  end\n  squares = []\n\n  until queue.empty?\n    square = queue.shift\n\n    # \u6570\u5b57\u304c\u672a\u8a2d\u7f6e\u306e\u5ea7\u6a19\u3092\u63a2\u3059\u3002\u672a\u8a2d\u7f6e\u306e\u5ea7\u6a19\u304c\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u9b54\u6cd5\u9663\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3068\u3044\u3046\u3053\u3068\u3002\n    x, y = [*0...3].product([*0...3]).find{|i, j| square[i][j] == 0}\n    if x.nil? && y.nil?\n      squares << square\n      next\n    end\n\n    # \u5ea7\u6a19(x, y)\u306b\u7f6e\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306f\u3001\u305d\u306e\u9b54\u6cd5\u9663\u306b\u304a\u3044\u3066\u3044\u307e\u3060\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u6570\u5b57\u3002\n    # \u305f\u3060\u3057\u5e95\u8fba\u3084\u53f3\u8fba\u306e\u5ea7\u6a19\u306e\u5834\u5408\u306f\u3001\u7e26\u65b9\u5411\u3084\u6a2a\u65b9\u5411\u3042\u308b\u3044\u306f\u659c\u3081\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3063\u3066\u304a\u304f(=\u679d\u5208\u308a)\n    digits = [*lo..hi] - square.flatten.uniq\n    digits.select!{|digit| square[0][y] + square[1][y] + digit == total} if x == 2           # \u5e95\u8fba=\u7e26\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046\n    digits.select!{|digit| square[x][0] + square[x][1] + digit == total} if y == 2           # \u53f3\u8fba=\u6a2a\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046\n    digits.select!{|digit| square[0][2] + square[1][1] + digit == total} if x == 2 && y == 0 # \u5de6\u306a\u306a\u3081\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046\n    digits.select!{|digit| square[0][0] + square[1][1] + digit == total} if x == 2 && y == 2 # \u53f3\u306a\u306a\u3081\u65b9\u5411\u306e\u691c\u67fb\u3092\u884c\u3046\n\n    digits.each do |digit|\n      temp = square.map(&:dup)\n      temp[x][y] = digit\n      queue << temp\n    end\n  end\n\n  squares\nend\n\n#\n# 3x3\u306e\u9b54\u6cd5\u9663\u3092pretty-print\u3059\u308b\u3002\n# \u88dc\u52a9\u95a2\u6570=\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u306b\u306f\u7121\u95a2\u4fc2\u3002\n#\ndef pprint(squares)\n  (0...3).each do |x|\n    rows = squares.map{|square| square[x]}\n    puts rows.map{|row|\n      row.map{|digit| format(\"%02d\", digit)}.join(',')\n    }.join(' | ')\n  end\nend\n\nif __FILE__ == $0\n  (1..10).each do |n|\n    squares = solve(n)\n\n    puts \"[ n=#{n} ]\"\n    pprint(squares)\n  end\nend\n```\n\n\u3053\u308c\u3092\u5b9f\u884c\u3057\u305f\u3082\u306e\u304c\u6b21\u306e\u901a\u308a\u3002\n\n```\n$ time ruby main.rb\n[ n=1 ]\n02,07,06 | 02,09,04 | 04,03,08 | 04,09,02 | 06,01,08 | 06,07,02 | 08,01,06 | 08,03,04\n09,05,01 | 07,05,03 | 09,05,01 | 03,05,07 | 07,05,03 | 01,05,09 | 03,05,07 | 01,05,09\n04,03,08 | 06,01,08 | 02,07,06 | 08,01,06 | 02,09,04 | 08,03,04 | 04,09,02 | 06,07,02\n[ n=2 ]\n03,08,07 | 03,10,05 | 05,04,09 | 05,10,03 | 07,02,09 | 07,08,03 | 09,02,07 | 09,04,05\n10,06,02 | 08,06,04 | 10,06,02 | 04,06,08 | 08,06,04 | 02,06,10 | 04,06,08 | 02,06,10\n05,04,09 | 07,02,09 | 03,08,07 | 09,02,07 | 03,10,05 | 09,04,05 | 05,10,03 | 07,08,03\n[ n=3 ]\n04,09,08 | 04,11,06 | 06,05,10 | 06,11,04 | 08,03,10 | 08,09,04 | 10,03,08 | 10,05,06\n11,07,03 | 09,07,05 | 11,07,03 | 05,07,09 | 09,07,05 | 03,07,11 | 05,07,09 | 03,07,11\n06,05,10 | 08,03,10 | 04,09,08 | 10,03,08 | 04,11,06 | 10,05,06 | 06,11,04 | 08,09,04\n[ n=4 ]\n05,10,09 | 05,12,07 | 07,06,11 | 07,12,05 | 09,04,11 | 09,10,05 | 11,04,09 | 11,06,07\n12,08,04 | 10,08,06 | 12,08,04 | 06,08,10 | 10,08,06 | 04,08,12 | 06,08,10 | 04,08,12\n07,06,11 | 09,04,11 | 05,10,09 | 11,04,09 | 05,12,07 | 11,06,07 | 07,12,05 | 09,10,05\n[ n=5 ]\n06,11,10 | 06,13,08 | 08,07,12 | 08,13,06 | 10,05,12 | 10,11,06 | 12,05,10 | 12,07,08\n13,09,05 | 11,09,07 | 13,09,05 | 07,09,11 | 11,09,07 | 05,09,13 | 07,09,11 | 05,09,13\n08,07,12 | 10,05,12 | 06,11,10 | 12,05,10 | 06,13,08 | 12,07,08 | 08,13,06 | 10,11,06\n[ n=6 ]\n07,12,11 | 07,14,09 | 09,08,13 | 09,14,07 | 11,06,13 | 11,12,07 | 13,06,11 | 13,08,09\n14,10,06 | 12,10,08 | 14,10,06 | 08,10,12 | 12,10,08 | 06,10,14 | 08,10,12 | 06,10,14\n09,08,13 | 11,06,13 | 07,12,11 | 13,06,11 | 07,14,09 | 13,08,09 | 09,14,07 | 11,12,07\n[ n=7 ]\n08,13,12 | 08,15,10 | 10,09,14 | 10,15,08 | 12,07,14 | 12,13,08 | 14,07,12 | 14,09,10\n15,11,07 | 13,11,09 | 15,11,07 | 09,11,13 | 13,11,09 | 07,11,15 | 09,11,13 | 07,11,15\n10,09,14 | 12,07,14 | 08,13,12 | 14,07,12 | 08,15,10 | 14,09,10 | 10,15,08 | 12,13,08\n[ n=8 ]\n09,14,13 | 09,16,11 | 11,10,15 | 11,16,09 | 13,08,15 | 13,14,09 | 15,08,13 | 15,10,11\n16,12,08 | 14,12,10 | 16,12,08 | 10,12,14 | 14,12,10 | 08,12,16 | 10,12,14 | 08,12,16\n11,10,15 | 13,08,15 | 09,14,13 | 15,08,13 | 09,16,11 | 15,10,11 | 11,16,09 | 13,14,09\n[ n=9 ]\n10,15,14 | 10,17,12 | 12,11,16 | 12,17,10 | 14,09,16 | 14,15,10 | 16,09,14 | 16,11,12\n17,13,09 | 15,13,11 | 17,13,09 | 11,13,15 | 15,13,11 | 09,13,17 | 11,13,15 | 09,13,17\n12,11,16 | 14,09,16 | 10,15,14 | 16,09,14 | 10,17,12 | 16,11,12 | 12,17,10 | 14,15,10\n[ n=10 ]\n11,16,15 | 11,18,13 | 13,12,17 | 13,18,11 | 15,10,17 | 15,16,11 | 17,10,15 | 17,12,13\n18,14,10 | 16,14,12 | 18,14,10 | 12,14,16 | 16,14,12 | 10,14,18 | 12,14,16 | 10,14,18\n13,12,17 | 15,10,17 | 11,16,15 | 17,10,15 | 11,18,13 | 17,12,13 | 13,18,11 | 15,16,11\n\nreal    0m0.618s\nuser    0m0.406s\nsys     0m0.109s\n```\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u304b\u3089\u540c\u3058\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u306e\u306b\u5168\u63a2\u7d22\u3067\u306f35\u79d2\u304b\u304b\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u679d\u5208\u308a\u7248\u3067\u306f0.06\u79d2\u306b\u307e\u3067\u7e2e\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u4e0a\u4e0b\u5de6\u53f3\u5bfe\u79f0\u306e\u3082\u306e\u3092\u7701\u3044\u305f\u308a\u3001\u679d\u5208\u308a\u65b9\u6cd5\u3092\u5de5\u592b\u3057\u305f\u308a\u3059\u308c\u3070\u3001\u3088\u308a\u52b9\u7387\u5316\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u3053\u307e\u3067\u5287\u7684\u306a\u6539\u5584\u306f\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093(\u00b4\u30fb\u03c9\u30fb\uff40)\n", "coediting": false, "comments_count": 0, "created_at": "2018-07-15T21:48:00+09:00", "group": null, "id": "6c39cbade45d5b38fbb5", "likes_count": 1, "private": false, "reactions_count": 0, "tags": [{"name": "Ruby", "versions": []}], "title": "TECH PLAY\u300c\u5b9a\u756a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u9000\u5c48\uff1f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u3082\u3063\u3068\u697d\u3057\u304f\u5b66\u307c\u3046\uff01\u300d\u63b2\u8f09\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u554f\u984c\u3092\u89e3\u304d\u307e\u3057\u305f\u3002", "updated_at": "2018-07-15T21:48:00+09:00", "url": "https://qiita.com/neko_the_shadow/items/6c39cbade45d5b38fbb5", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}