{"rendered_body": "<p>\u3053\u306e\u8a18\u4e8b\u306f<a href=\"https://qiita.com/advent-calendar/2018/4949prime-series\">\u300c\u30b7\u30af\u30b7\u30af\u7d20\u6570\u5217 Advent Calendar 2018\u300d2\u65e5\u76ee</a>\u306b\u306a\u308a\u307e\u3059\u3002</p>\n\n<p>\u8a73\u7d30\u306f\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u8a72\u5f53\u30da\u30fc\u30b8\u3092\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u3056\u3063\u304f\u308a\u554f\u984c\u5185\u5bb9\u3092\u307e\u3068\u3081\u3066\u304a\u304f\u3068\u300c100\u4ee5\u4e0b\u306e\u6b63\u306e\u6574\u6570N\u304c\u3042\u305f\u3048\u3089\u308c\u305f\u3068\u304d\u3001N\u756a\u76ee\u307e\u3067\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3092\u6c42\u3081\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u306a\u3055\u3044\u300d\u3068\u3044\u3046\u3082\u306e\u3002\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3068\u306f\u6570\u5024\u306b4\u307e\u305f\u306f9\u3092\u7d20\u6570\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002</p>\n\n<p>\u5358\u7d14\u306a\u554f\u984c\u306a\u306e\u3067\u3001\u89e3\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5916\u90e8\u4ed5\u69d8\u3092\u6e80\u305f\u3059API\u304c\u3042\u308c\u3070\u3001\u3053\u308c\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u554f\u984c\u306e\u7b54\u3048\u304c\u51fa\u305b\u305d\u3046\u3067\u3059\u3002</p>\n\n<ol>\n<li>\n<code>hasFourOrNine</code>: \u81ea\u7136\u6570x\u304c\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001x\u306b4\u307e\u305f\u306f9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306ftrue\u3001\u305d\u308c\u4ee5\u5916\u306ffalse\u3092\u8fd4\u3059\u3002</li>\n<li>\n<code>isPrime</code>: \u81ea\u7136\u6570x\u304c\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001x\u304c\u7d20\u6570\u306a\u3089\u3070true\u3001\u305d\u308c\u4ee5\u5916\u306ffalse\u3092\u8fd4\u3059\u3002</li>\n<li>\n<code>solve</code>: 100\u4ee5\u4e0b\u306e\u81ea\u7136\u6570n\u304c\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001n\u756a\u76ee\u307e\u3067\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3002</li>\n</ol>\n\n<p>\u3055\u3066\u5b9f\u88c5\u306b\u79fb\u3063\u3066\u3044\u304f\u308f\u3051\u3067\u3059\u304c\u3001Java6\u3084Java7\u3042\u305f\u308a\u306e\u3084\u3084\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eJava\u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u306f\u305a\u3067\u3059(\u3082\u3063\u3068\u3082\u300c\u3084\u3084\u53e4\u3044\u300d\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u3001Java\u88fd\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u6982\u3057\u3066\u9577\u6301\u3061\u306a\u306e\u3067\u3001\u3053\u306e\u3050\u3089\u3044\u306e\u53e4\u3055\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308c\u3070\u3001\u73fe\u5f79\u3067\u52d5\u3044\u3066\u3044\u308b\u3082\u306e\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u2026\u2026)</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">Main1.java</span></div>\n<div class=\"highlight\"><pre>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main1</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"o\">;</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">solve</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">String</span> <span class=\"nf\">solve</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">StringBuilder</span> <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuilder</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">x</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">isPrime</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">hasFourOrNine</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n                <span class=\"n\">answer</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">);</span>\n                <span class=\"k\">if</span> <span class=\"o\">(--</span><span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"n\">answer</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"s\">\",\"</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">answer</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">boolean</span> <span class=\"nf\">hasFourOrNine</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">while</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"o\">;</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">4</span> <span class=\"o\">||</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">9</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">x</span> <span class=\"o\">/=</span> <span class=\"mi\">10</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isPrime</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">sqrt</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">);</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">%</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n\n<p>\u4e0a\u8a18\u306e\u4f8b\u306f\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u8272\u5408\u3044\u304c\u5f37\u304f\u3001\u5168\u4f53\u7684\u306a\u898b\u305f\u76ee\u3068\u3057\u3066\u306f\u7e26\u9577\u306b\u306a\u308a\u307e\u3059\u3002\u3067\u306f\u5916\u90e8\u4ed5\u69d8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u4eca\u65e5\u73fe\u5728\u306eJava\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b11\u3089\u3057\u304f\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3057\u3087\u3046 (\u3082\u3063\u3068\u3082Java11\u3089\u3057\u3044\u6a5f\u80fd\u306f\u307e\u3063\u305f\u304f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u2026\u2026)</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">Main2.java</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">java.util.stream.Collectors</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.stream.IntStream</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main2</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"o\">;</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">solve</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">String</span> <span class=\"nf\">solve</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">IntStream</span><span class=\"o\">.</span><span class=\"na\">iterate</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">filter</span><span class=\"o\">(</span><span class=\"nl\">Main2:</span><span class=\"o\">:</span><span class=\"n\">isPrime</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">filter</span><span class=\"o\">(</span><span class=\"nl\">Main2:</span><span class=\"o\">:</span><span class=\"n\">hasFourOrNine</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">mapToObj</span><span class=\"o\">(</span><span class=\"nl\">String:</span><span class=\"o\">:</span><span class=\"n\">valueOf</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">limit</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">joining</span><span class=\"o\">(</span><span class=\"s\">\",\"</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">boolean</span> <span class=\"nf\">hasFourOrNine</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">IntStream</span><span class=\"o\">.</span><span class=\"na\">iterate</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">10</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"o\">)</span>\n                        <span class=\"o\">.</span><span class=\"na\">anyMatch</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">4</span> <span class=\"o\">||</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">9</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isPrime</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">2</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">IntStream</span><span class=\"o\">.</span><span class=\"na\">rangeClosed</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span><span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">sqrt</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)).</span><span class=\"na\">allMatch</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">x</span> <span class=\"o\">%</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n\n<p>Stream API\u3084\u30e9\u30e0\u30c0\u5f0f\u3092\u591a\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u7e26\u306e\u9577\u3055\u306f\u3050\u3063\u3068\u7e2e\u307e\u308a\u3001\u5168\u4f53\u3068\u3057\u3066\u6a2a\u9577\u306e\u30b3\u30fc\u30c9\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u3044\u3048\u308b\u307b\u3069\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5c11\u306a\u304f\u3068\u3082\u305d\u306e\u30d1\u30e9\u30c0\u30a4\u30e0\u306e\u4e00\u90e8\u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>\n\n<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3046\u3048\u3067\u5927\u4e8b\u306b\u3057\u305f\u3044\u306e\u304c\u300c\u53ef\u8aad\u6027\u300d--\u3067\u3059\u304c\u3001\u3053\u306e\u7a0b\u5ea6\u306e\u9577\u3055\u3060\u3068\u53ef\u8aad\u6027\u3046\u3093\u306c\u3093\u3068\u3044\u3046\u611f\u3058\u3067\u306f\u306a\u3044\u3067\u3059\u306d\u2026\u2026\u3002\u305f\u3060\u500b\u4eba\u7684\u306b\u66f8\u3044\u3066\u3044\u3066\u697d\u3057\u3044\u30fb\u6c17\u6301\u3061\u3044\u3044\u306e\u306f\u5f8c\u8005\u3002\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306f\u7656\u306b\u306a\u308b(\u00b4\u30fb\u03c9\u30fb\uff40)</p>\n\n<p>\u6700\u5f8c\u306bn=100\u306e\u5834\u5408\u306e\u554f\u984c\u306e\u89e3\u7b54\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u554f\u984c\u306e\u6307\u5b9a\u3067\u306f\u300c\u30ab\u30f3\u30de\u533a\u5207\u308a\u300d\u3067\u3057\u305f\u304c\u3001\u8aad\u307f\u3084\u3059\u3055\u306e\u90fd\u5408\u4e0a\u3001\u4ee5\u4e0b\u3067\u306f\u300c\u6539\u884c\u533a\u5207\u308a\u300d\u3067\u793a\u3057\u307e\u3059\u3002\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>19\n29\n41\n43\n47\n59\n79\n89\n97\n109\n139\n149\n179\n191\n193\n197\n199\n229\n239\n241\n269\n293\n347\n349\n359\n379\n389\n397\n401\n409\n419\n421\n431\n433\n439\n443\n449\n457\n461\n463\n467\n479\n487\n491\n499\n509\n541\n547\n569\n593\n599\n619\n641\n643\n647\n659\n691\n709\n719\n739\n743\n769\n797\n809\n829\n839\n859\n907\n911\n919\n929\n937\n941\n947\n953\n967\n971\n977\n983\n991\n997\n1009\n1019\n1039\n1049\n1069\n1091\n1093\n1097\n1109\n1129\n1193\n1229\n1249\n1259\n1279\n1289\n1291\n1297\n1319\n</pre></div></div>\n", "body": "\u3053\u306e\u8a18\u4e8b\u306f[\u300c\u30b7\u30af\u30b7\u30af\u7d20\u6570\u5217 Advent Calendar 2018\u300d2\u65e5\u76ee](https://qiita.com/advent-calendar/2018/4949prime-series)\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u8a73\u7d30\u306f\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u8a72\u5f53\u30da\u30fc\u30b8\u3092\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u3056\u3063\u304f\u308a\u554f\u984c\u5185\u5bb9\u3092\u307e\u3068\u3081\u3066\u304a\u304f\u3068\u300c100\u4ee5\u4e0b\u306e\u6b63\u306e\u6574\u6570N\u304c\u3042\u305f\u3048\u3089\u308c\u305f\u3068\u304d\u3001N\u756a\u76ee\u307e\u3067\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3092\u6c42\u3081\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u306a\u3055\u3044\u300d\u3068\u3044\u3046\u3082\u306e\u3002\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3068\u306f\u6570\u5024\u306b4\u307e\u305f\u306f9\u3092\u7d20\u6570\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5358\u7d14\u306a\u554f\u984c\u306a\u306e\u3067\u3001\u89e3\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5916\u90e8\u4ed5\u69d8\u3092\u6e80\u305f\u3059API\u304c\u3042\u308c\u3070\u3001\u3053\u308c\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u554f\u984c\u306e\u7b54\u3048\u304c\u51fa\u305b\u305d\u3046\u3067\u3059\u3002\n\n1. `hasFourOrNine`: \u81ea\u7136\u6570x\u304c\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001x\u306b4\u307e\u305f\u306f9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306ftrue\u3001\u305d\u308c\u4ee5\u5916\u306ffalse\u3092\u8fd4\u3059\u3002\n2. `isPrime`: \u81ea\u7136\u6570x\u304c\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001x\u304c\u7d20\u6570\u306a\u3089\u3070true\u3001\u305d\u308c\u4ee5\u5916\u306ffalse\u3092\u8fd4\u3059\u3002\n3. `solve`: 100\u4ee5\u4e0b\u306e\u81ea\u7136\u6570n\u304c\u5f15\u6570\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001n\u756a\u76ee\u307e\u3067\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3002\n\n\u3055\u3066\u5b9f\u88c5\u306b\u79fb\u3063\u3066\u3044\u304f\u308f\u3051\u3067\u3059\u304c\u3001Java6\u3084Java7\u3042\u305f\u308a\u306e\u3084\u3084\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eJava\u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u306f\u305a\u3067\u3059(\u3082\u3063\u3068\u3082\u300c\u3084\u3084\u53e4\u3044\u300d\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u3001Java\u88fd\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u6982\u3057\u3066\u9577\u6301\u3061\u306a\u306e\u3067\u3001\u3053\u306e\u3050\u3089\u3044\u306e\u53e4\u3055\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308c\u3070\u3001\u73fe\u5f79\u3067\u52d5\u3044\u3066\u3044\u308b\u3082\u306e\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u2026\u2026)\n\n```java:Main1.java\n\npublic class Main1 {\n    public static void main(String[] args) {\n        int n = 100;\n        System.out.println(solve(n));\n    }\n    \n    public static String solve(int n) {\n        StringBuilder answer = new StringBuilder();\n        for (int x = 1; n > 0; x++) {\n            if (isPrime(x) && hasFourOrNine(x)) {\n                answer.append(x);\n                if (--n > 0) {\n                    answer.append(\",\");\n                }\n            }\n        }\n        return answer.toString();\n    }\n    \n    public static boolean hasFourOrNine(int x) {\n        while (x > 0) {\n            int i = x % 10;\n            if (i == 4 || i == 9) {\n                return true;\n            }\n            x /= 10;\n        }\n        return false;\n    }\n    \n    public static boolean isPrime(int x) {\n        if (x < 2) {\n            return false;\n        }\n        \n        for (int i = 2; i <= Math.sqrt(x); i++) {\n            if (x % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```\n\n\u4e0a\u8a18\u306e\u4f8b\u306f\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u8272\u5408\u3044\u304c\u5f37\u304f\u3001\u5168\u4f53\u7684\u306a\u898b\u305f\u76ee\u3068\u3057\u3066\u306f\u7e26\u9577\u306b\u306a\u308a\u307e\u3059\u3002\u3067\u306f\u5916\u90e8\u4ed5\u69d8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u4eca\u65e5\u73fe\u5728\u306eJava\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b11\u3089\u3057\u304f\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3057\u3087\u3046 (\u3082\u3063\u3068\u3082Java11\u3089\u3057\u3044\u6a5f\u80fd\u306f\u307e\u3063\u305f\u304f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u2026\u2026)\n\n```java:Main2.java\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\n\npublic class Main2 {\n    public static void main(String[] args) {\n        int n = 100;\n        System.out.println(solve(n));\n    }\n    \n    public static String solve(int n) {\n        return IntStream.iterate(1, x -> x + 1)\n                        .filter(Main2::isPrime)\n                        .filter(Main2::hasFourOrNine)\n                        .mapToObj(String::valueOf)\n                        .limit(n)\n                        .collect(Collectors.joining(\",\"));\n    }\n    \n    public static boolean hasFourOrNine(int x) {\n        return IntStream.iterate(x, i -> i > 0, i -> i / 10)\n                        .map(i -> i % 10)\n                        .anyMatch(i -> i == 4 || i == 9);\n    }\n    \n    public static boolean isPrime(int x) {\n        return x >= 2 && IntStream.rangeClosed(2, (int)Math.sqrt(x)).allMatch(i -> x % i != 0);\n    }\n}\n```\n\nStream API\u3084\u30e9\u30e0\u30c0\u5f0f\u3092\u591a\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u7e26\u306e\u9577\u3055\u306f\u3050\u3063\u3068\u7e2e\u307e\u308a\u3001\u5168\u4f53\u3068\u3057\u3066\u6a2a\u9577\u306e\u30b3\u30fc\u30c9\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u3044\u3048\u308b\u307b\u3069\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5c11\u306a\u304f\u3068\u3082\u305d\u306e\u30d1\u30e9\u30c0\u30a4\u30e0\u306e\u4e00\u90e8\u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3046\u3048\u3067\u5927\u4e8b\u306b\u3057\u305f\u3044\u306e\u304c\u300c\u53ef\u8aad\u6027\u300d--\u3067\u3059\u304c\u3001\u3053\u306e\u7a0b\u5ea6\u306e\u9577\u3055\u3060\u3068\u53ef\u8aad\u6027\u3046\u3093\u306c\u3093\u3068\u3044\u3046\u611f\u3058\u3067\u306f\u306a\u3044\u3067\u3059\u306d\u2026\u2026\u3002\u305f\u3060\u500b\u4eba\u7684\u306b\u66f8\u3044\u3066\u3044\u3066\u697d\u3057\u3044\u30fb\u6c17\u6301\u3061\u3044\u3044\u306e\u306f\u5f8c\u8005\u3002\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306f\u7656\u306b\u306a\u308b(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n\u6700\u5f8c\u306bn=100\u306e\u5834\u5408\u306e\u554f\u984c\u306e\u89e3\u7b54\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u554f\u984c\u306e\u6307\u5b9a\u3067\u306f\u300c\u30ab\u30f3\u30de\u533a\u5207\u308a\u300d\u3067\u3057\u305f\u304c\u3001\u8aad\u307f\u3084\u3059\u3055\u306e\u90fd\u5408\u4e0a\u3001\u4ee5\u4e0b\u3067\u306f\u300c\u6539\u884c\u533a\u5207\u308a\u300d\u3067\u793a\u3057\u307e\u3059\u3002\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\n```\n19\n29\n41\n43\n47\n59\n79\n89\n97\n109\n139\n149\n179\n191\n193\n197\n199\n229\n239\n241\n269\n293\n347\n349\n359\n379\n389\n397\n401\n409\n419\n421\n431\n433\n439\n443\n449\n457\n461\n463\n467\n479\n487\n491\n499\n509\n541\n547\n569\n593\n599\n619\n641\n643\n647\n659\n691\n709\n719\n739\n743\n769\n797\n809\n829\n839\n859\n907\n911\n919\n929\n937\n941\n947\n953\n967\n971\n977\n983\n991\n997\n1009\n1019\n1039\n1049\n1069\n1091\n1093\n1097\n1109\n1129\n1193\n1229\n1249\n1259\n1279\n1289\n1291\n1297\n1319\n```\n", "coediting": false, "comments_count": 0, "created_at": "2018-11-27T21:10:37+09:00", "group": null, "id": "39eb449bf5794e43e235", "likes_count": 3, "private": false, "reactions_count": 0, "tags": [{"name": "Java", "versions": []}], "title": "\u30b7\u30af\u30b7\u30af\u7d20\u6570\u5217 Advent Calendar 2018 Java\u7de8", "updated_at": "2018-12-04T11:47:24+09:00", "url": "https://qiita.com/neko_the_shadow/items/39eb449bf5794e43e235", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}