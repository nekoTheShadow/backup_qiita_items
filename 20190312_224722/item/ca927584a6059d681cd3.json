{"rendered_body": "<p><a href=\"https://qiita.com/advent-calendar/2018/4949prime-series\">\u300c\u30b7\u30af\u30b7\u30af\u7d20\u6570\u5217 Advent Calendar 2018\u300d</a>\u306e16\u65e5\u76ee\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u554f\u984c\u8a73\u7d30\u306f\u5f53\u8a72\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u3054\u304f\u7c21\u5358\u306b\u307e\u3068\u3081\u3066\u304a\u304f\u3068\u300c100\u4ee5\u4e0b\u306e\u81ea\u7136\u6570n\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001n\u756a\u76ee\u307e\u3067\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3092\u6c42\u3081\u3066\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u306a\u3055\u3044\u300d\u3068\u3044\u3046\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304a\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3068\u306f\u6570\u5024\u3068\u3057\u30664\u307e\u305f\u306f9\u3092\u542b\u3080\u7d20\u6570\u3092\u6307\u3057\u307e\u3059\u3002</p>\n\n<p>\u672c\u8a18\u4e8b\u3067\u306f\u3053\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u554f\u984c\u3092C#\u3067\u89e3\u7b54\u3057\u3066\u3044\u307e\u3059\u3002\u89e3\u7b54\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\"><div class=\"highlight\"><pre><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">Prime4949</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Program</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">int</span> <span class=\"n\">n</span> <span class=\"p\">=</span> <span class=\"m\">100</span><span class=\"p\">;</span>\n            <span class=\"kt\">var</span> <span class=\"n\">answer</span> <span class=\"p\">=</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"s\">\",\"</span><span class=\"p\">,</span> <span class=\"nf\">Primes</span><span class=\"p\">().</span><span class=\"nf\">Where</span><span class=\"p\">(</span><span class=\"n\">Program</span><span class=\"p\">.</span><span class=\"n\">HasFourOrNine</span><span class=\"p\">).</span><span class=\"nf\">Take</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">));</span>\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">answer</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">/// &lt;summary&gt;</span>\n        <span class=\"c1\">/// \u6570\u5024\u306b4\u304b9\u3092\u542b\u3080\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u3002</span>\n        <span class=\"c1\">/// &lt;/summary&gt;</span>\n        <span class=\"c1\">/// &lt;param name=\"x\"&gt;\u81ea\u7136\u6570&lt;/param&gt;</span>\n        <span class=\"c1\">/// &lt;returns&gt;x\u304c4\u304b9\u3092\u542b\u3080\u5834\u5408true&lt;/returns&gt;</span>\n        <span class=\"k\">static</span> <span class=\"kt\">bool</span> <span class=\"nf\">HasFourOrNine</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"p\">&gt;</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"kt\">int</span> <span class=\"n\">mod</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">%</span> <span class=\"m\">10</span><span class=\"p\">;</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">mod</span> <span class=\"p\">==</span> <span class=\"m\">4</span> <span class=\"p\">||</span> <span class=\"n\">mod</span> <span class=\"p\">==</span> <span class=\"m\">9</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">x</span> <span class=\"p\">/=</span> <span class=\"m\">10</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">/// &lt;summary&gt;</span>\n        <span class=\"c1\">/// \u7d20\u6570\u3092\u6b21\u3005\u306b\u751f\u6210\u3059\u308b\u3002</span>\n        <span class=\"c1\">/// </span>\n        <span class=\"c1\">/// \u6ce8\u610f: </span>\n        <span class=\"c1\">///     \u4efb\u610f\u306e\u7d20\u6570\u3092x\u3068\u3059\u308b\u3068\u3001x+1..x^2\u306b1\u3064\u4ee5\u4e0a\u306e\u7d20\u6570\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002</span>\n        <span class=\"c1\">///     \u305d\u306e\u307b\u304b\u3001\u8aac\u660e\u306e\u305f\u3081\u306b\u3082\u308d\u3082\u308d\u306e\u691c\u67fb\u3092\u3059\u3063\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002</span>\n        <span class=\"c1\">///     \u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a\u5834\u9762\u3067\u306f\u5229\u7528\u3057\u306a\u3044\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002</span>\n        <span class=\"c1\">/// &lt;/summary&gt;</span>\n        <span class=\"c1\">/// &lt;returns&gt;\u7d20\u6570&lt;/returns&gt;</span>\n        <span class=\"k\">static</span> <span class=\"n\">IEnumerable</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;</span> <span class=\"nf\">Primes</span><span class=\"p\">()</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">var</span> <span class=\"n\">primes</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">List</span><span class=\"p\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">5</span> <span class=\"p\">};</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">index</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"p\">;</span> <span class=\"n\">index</span><span class=\"p\">++)</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">index</span> <span class=\"p\">==</span> <span class=\"n\">primes</span><span class=\"p\">.</span><span class=\"n\">Count</span><span class=\"p\">)</span>\n                <span class=\"p\">{</span>\n                    <span class=\"kt\">var</span> <span class=\"n\">min</span> <span class=\"p\">=</span> <span class=\"n\">primes</span><span class=\"p\">.</span><span class=\"nf\">Last</span><span class=\"p\">()</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">;</span>\n                    <span class=\"kt\">var</span> <span class=\"n\">max</span> <span class=\"p\">=</span> <span class=\"n\">min</span> <span class=\"p\">*</span> <span class=\"n\">min</span><span class=\"p\">;</span>\n                    <span class=\"kt\">var</span> <span class=\"n\">integers</span> <span class=\"p\">=</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"p\">,</span> <span class=\"n\">max</span> <span class=\"p\">-</span> <span class=\"n\">min</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">).</span><span class=\"nf\">ToList</span><span class=\"p\">();</span>\n                    <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">var</span> <span class=\"n\">prime</span> <span class=\"k\">in</span> <span class=\"n\">primes</span><span class=\"p\">)</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"kt\">int</span> <span class=\"n\">sieving</span> <span class=\"p\">=</span> <span class=\"n\">integers</span><span class=\"p\">.</span><span class=\"nf\">FindIndex</span><span class=\"p\">(</span><span class=\"n\">digit</span> <span class=\"p\">=&gt;</span> <span class=\"n\">digit</span> <span class=\"p\">%</span> <span class=\"n\">prime</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">);</span>\n                        <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">sieving</span> <span class=\"p\">&lt;</span> <span class=\"n\">integers</span><span class=\"p\">.</span><span class=\"n\">Count</span><span class=\"p\">)</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"n\">integers</span><span class=\"p\">[</span><span class=\"n\">sieving</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">;</span>\n                            <span class=\"n\">sieving</span> <span class=\"p\">+=</span> <span class=\"n\">prime</span><span class=\"p\">;</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                    <span class=\"n\">primes</span><span class=\"p\">.</span><span class=\"nf\">AddRange</span><span class=\"p\">(</span><span class=\"n\">integers</span><span class=\"p\">.</span><span class=\"nf\">Where</span><span class=\"p\">(</span><span class=\"n\">integer</span> <span class=\"p\">=&gt;</span> <span class=\"n\">integer</span> <span class=\"p\">!=</span> <span class=\"p\">-</span><span class=\"m\">1</span><span class=\"p\">));</span>\n                <span class=\"p\">}</span>\n\n                <span class=\"k\">yield</span> <span class=\"k\">return</span> <span class=\"n\">primes</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">];</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div></div>\n\n<hr>\n\n<p>\u30b7\u30f3\u30d7\u30eb\u306a\u554f\u984c\u306a\u306e\u3067\u89e3\u7b54\u65b9\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u6b21\u306e\u3088\u3046\u306a\u65b9\u91dd\u3092\u63a1\u7528\u3057\u3066\u307f\u307e\u3059:\u300c\u7d20\u6570\u5217\u304b\u30894949\u6027\u3092\u6e80\u305f\u3059\u3082\u306e\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u300d\u3002\u307e\u305a\u7d20\u6570\u5217\u306e\u751f\u6210\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3044\u308f\u3086\u308b<a href=\"https://ja.wikipedia.org/wiki/%E3%82%A8%E3%83%A9%E3%83%88%E3%82%B9%E3%83%86%E3%83%8D%E3%82%B9%E3%81%AE%E7%AF%A9\" rel=\"nofollow noopener\" target=\"_blank\">\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u3075\u308b\u3044</a>\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u3075\u308b\u3044\u306f\u7d20\u6570\u5224\u5b9a\u6cd5\u306e\u3072\u3068\u3064\u3067\u3001\u6307\u5b9a\u3055\u308c\u305f\u6574\u6570\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u5358\u7d14\u304b\u3064\u52b9\u7387\u7684\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6559\u6750\u306b\u3082\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u300c\u6307\u5b9a\u3055\u308c\u305f\u6574\u6570\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u6c42\u3081\u308b\u300d\u3068\u3044\u3046\u8a18\u8ff0\u3092\u898b\u308b\u3068\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u300c\u7121\u9650\u306b\u7d20\u6570\u3092\u4f5c\u308a\u305f\u3044\u300d\u3068\u3044\u3046\u8981\u4ef6\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u3088\u3046\u306b\u3082\u601d\u3048\u307e\u3059\u304c\u3001\u5de5\u592b\u6b21\u7b2c\u3067\u306f\u306a\u3093\u3068\u3067\u3082\u306a\u308a\u3001\u305d\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c<code>Primes</code>\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002</p>\n\n<p>4949\u6027\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b--\u3059\u306a\u308f\u3061\u4e0e\u3048\u3089\u308c\u305f\u6574\u6570\u304c\u6570\u5024\u3068\u3057\u30664\u307e\u305f\u306f9\u3092\u542b\u3080\u304b\u306e\u5224\u5b9a\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u304c\u30e1\u30bd\u30c3\u30c9<code>HasFourOrNine</code>\u3067\u3001\u9664\u6cd5\u3092\u3046\u307e\u304f\u5229\u7528\u3057\u3066\u6574\u6570x\u3092\u5404\u6841\u3054\u3068\u306b\u3070\u3089\u3057\u3066\u3044\u307e\u3059\u3002</p>\n", "body": "[\u300c\u30b7\u30af\u30b7\u30af\u7d20\u6570\u5217 Advent Calendar 2018\u300d](https://qiita.com/advent-calendar/2018/4949prime-series)\u306e16\u65e5\u76ee\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u554f\u984c\u8a73\u7d30\u306f\u5f53\u8a72\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u3054\u304f\u7c21\u5358\u306b\u307e\u3068\u3081\u3066\u304a\u304f\u3068\u300c100\u4ee5\u4e0b\u306e\u81ea\u7136\u6570n\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u3001n\u756a\u76ee\u307e\u3067\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3092\u6c42\u3081\u3066\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u51fa\u529b\u3057\u306a\u3055\u3044\u300d\u3068\u3044\u3046\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304a\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u3068\u306f\u6570\u5024\u3068\u3057\u30664\u307e\u305f\u306f9\u3092\u542b\u3080\u7d20\u6570\u3092\u6307\u3057\u307e\u3059\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u3053\u306e\"\u30b7\u30af\u30b7\u30af\u7d20\u6570\"\u554f\u984c\u3092C#\u3067\u89e3\u7b54\u3057\u3066\u3044\u307e\u3059\u3002\u89e3\u7b54\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace Prime4949\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = 100;\n            var answer = string.Join(\",\", Primes().Where(Program.HasFourOrNine).Take(n));\n            Console.WriteLine(answer);\n        }\n\n        /// <summary>\n        /// \u6570\u5024\u306b4\u304b9\u3092\u542b\u3080\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u3002\n        /// </summary>\n        /// <param name=\"x\">\u81ea\u7136\u6570</param>\n        /// <returns>x\u304c4\u304b9\u3092\u542b\u3080\u5834\u5408true</returns>\n        static bool HasFourOrNine(int x)\n        {\n            while (x > 0)\n            {\n                int mod = x % 10;\n                if (mod == 4 || mod == 9)\n                {\n                    return true;\n                }\n                x /= 10;\n            }\n            return false;\n        }\n\n        /// <summary>\n        /// \u7d20\u6570\u3092\u6b21\u3005\u306b\u751f\u6210\u3059\u308b\u3002\n        /// \n        /// \u6ce8\u610f: \n        ///     \u4efb\u610f\u306e\u7d20\u6570\u3092x\u3068\u3059\u308b\u3068\u3001x+1..x^2\u306b1\u3064\u4ee5\u4e0a\u306e\u7d20\u6570\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n        ///     \u305d\u306e\u307b\u304b\u3001\u8aac\u660e\u306e\u305f\u3081\u306b\u3082\u308d\u3082\u308d\u306e\u691c\u67fb\u3092\u3059\u3063\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\n        ///     \u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a\u5834\u9762\u3067\u306f\u5229\u7528\u3057\u306a\u3044\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n        /// </summary>\n        /// <returns>\u7d20\u6570</returns>\n        static IEnumerable<int> Primes()\n        {\n            var primes = new List<int> { 2, 3, 5 };\n            for (int index = 0; ; index++)\n            {\n                if (index == primes.Count)\n                {\n                    var min = primes.Last() + 1;\n                    var max = min * min;\n                    var integers = Enumerable.Range(min, max - min + 1).ToList();\n                    foreach (var prime in primes)\n                    {\n                        int sieving = integers.FindIndex(digit => digit % prime == 0);\n                        while (sieving < integers.Count)\n                        {\n                            integers[sieving] = -1;\n                            sieving += prime;\n                        }\n                    }\n                    primes.AddRange(integers.Where(integer => integer != -1));\n                }\n\n                yield return primes[index];\n            }\n        }\n    }\n}\n```\n\n---\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u554f\u984c\u306a\u306e\u3067\u89e3\u7b54\u65b9\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u6b21\u306e\u3088\u3046\u306a\u65b9\u91dd\u3092\u63a1\u7528\u3057\u3066\u307f\u307e\u3059:\u300c\u7d20\u6570\u5217\u304b\u30894949\u6027\u3092\u6e80\u305f\u3059\u3082\u306e\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u300d\u3002\u307e\u305a\u7d20\u6570\u5217\u306e\u751f\u6210\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3044\u308f\u3086\u308b[\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u3075\u308b\u3044](https://ja.wikipedia.org/wiki/%E3%82%A8%E3%83%A9%E3%83%88%E3%82%B9%E3%83%86%E3%83%8D%E3%82%B9%E3%81%AE%E7%AF%A9)\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u3075\u308b\u3044\u306f\u7d20\u6570\u5224\u5b9a\u6cd5\u306e\u3072\u3068\u3064\u3067\u3001\u6307\u5b9a\u3055\u308c\u305f\u6574\u6570\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u5358\u7d14\u304b\u3064\u52b9\u7387\u7684\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6559\u6750\u306b\u3082\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u300c\u6307\u5b9a\u3055\u308c\u305f\u6574\u6570\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u6c42\u3081\u308b\u300d\u3068\u3044\u3046\u8a18\u8ff0\u3092\u898b\u308b\u3068\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u300c\u7121\u9650\u306b\u7d20\u6570\u3092\u4f5c\u308a\u305f\u3044\u300d\u3068\u3044\u3046\u8981\u4ef6\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u3088\u3046\u306b\u3082\u601d\u3048\u307e\u3059\u304c\u3001\u5de5\u592b\u6b21\u7b2c\u3067\u306f\u306a\u3093\u3068\u3067\u3082\u306a\u308a\u3001\u305d\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c`Primes`\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n4949\u6027\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b--\u3059\u306a\u308f\u3061\u4e0e\u3048\u3089\u308c\u305f\u6574\u6570\u304c\u6570\u5024\u3068\u3057\u30664\u307e\u305f\u306f9\u3092\u542b\u3080\u304b\u306e\u5224\u5b9a\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u304c\u30e1\u30bd\u30c3\u30c9`HasFourOrNine`\u3067\u3001\u9664\u6cd5\u3092\u3046\u307e\u304f\u5229\u7528\u3057\u3066\u6574\u6570x\u3092\u5404\u6841\u3054\u3068\u306b\u3070\u3089\u3057\u3066\u3044\u307e\u3059\u3002\n\n", "coediting": false, "comments_count": 0, "created_at": "2018-12-12T23:40:25+09:00", "group": null, "id": "ca927584a6059d681cd3", "likes_count": 4, "private": false, "reactions_count": 0, "tags": [{"name": "C#", "versions": []}], "title": "\u30b7\u30af\u30b7\u30af\u7d20\u6570\u5217 Advent Calendar 2018 C#\u7de8", "updated_at": "2018-12-16T07:03:11+09:00", "url": "https://qiita.com/neko_the_shadow/items/ca927584a6059d681cd3", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}