{"rendered_body": "<p>\u305f\u3068\u3048\u3070\u3001\u30e6\u30fc\u30b6\u3068\u305d\u306e\u30e6\u30fc\u30b6\u304c\u652f\u6255\u3063\u305f\u91d1\u984d\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u4e0e\u3048\u3089\u308c\u308b\u3068\u3057\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Payment</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">var</span> <span class=\"n\">payments</span> <span class=\"o\">=</span> <span class=\"n\">List</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span>\n            <span class=\"k\">new</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"s\">\"A\"</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">),</span>\n            <span class=\"k\">new</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"s\">\"B\"</span><span class=\"o\">,</span> <span class=\"mi\">20</span><span class=\"o\">),</span>\n            <span class=\"k\">new</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"s\">\"B\"</span><span class=\"o\">,</span> <span class=\"mi\">30</span><span class=\"o\">),</span>\n            <span class=\"k\">new</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"s\">\"C\"</span><span class=\"o\">,</span> <span class=\"mi\">40</span><span class=\"o\">),</span>\n            <span class=\"k\">new</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"s\">\"C\"</span><span class=\"o\">,</span> <span class=\"mi\">50</span><span class=\"o\">),</span>\n            <span class=\"k\">new</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"s\">\"C\"</span><span class=\"o\">,</span> <span class=\"mi\">60</span><span class=\"o\">)</span>\n        <span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">value</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">Payment</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">value</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">getValue</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">value</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n\n<p>\u3067\u306f\u5404\u3005\u306e\u30e6\u30fc\u30b6\u306b\u3064\u3044\u3066\u3001\u652f\u6255\u3044\u306e\u500b\u6570\u3092\u652f\u6255\u3044\u306e\u56de\u6570\u3084\u652f\u6255\u3063\u305f\u91d1\u984d\u306e\u5408\u8a08\u3001\u3042\u308b\u3044\u306f\u91d1\u984d\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u305f\u3044\u3002SQL\u3067\u3042\u308c\u3070<code>GROUP BY</code>\u3068\u30a6\u30a3\u30f3\u30c9\u30a6\u95a2\u6570\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u7c21\u5358\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001Java\u306eStream\u3067\u306f\u3069\u306e\u3088\u3046\u306b\u66f8\u304f\u3079\u304d\u3067\u3057\u3087\u3046\u304b?</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">select</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">payment</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">name</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"k\">sum</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">payment</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">name</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"k\">max</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">payment</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">name</span><span class=\"p\">;</span>\n</pre></div></div>\n\n<p>\u5168\u4f53\u7684\u306a\u65b9\u91dd\u3068\u3057\u3066\u306f<code>Collectors.groupingBy</code>\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u307e\u305a\u652f\u6255\u3044\u306e\u56de\u6570\u3001\u3064\u307e\u308a<code>group-by-count</code>\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"n\">var</span> <span class=\"n\">counts</span> <span class=\"o\">=</span> <span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">groupingBy</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getName</span><span class=\"o\">,</span> <span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">counting</span><span class=\"o\">()));</span>\n<span class=\"n\">counts</span><span class=\"o\">.</span><span class=\"na\">entrySet</span><span class=\"o\">().</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getKey</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"=\"</span> <span class=\"o\">+</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getValue</span><span class=\"o\">()).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">::</span><span class=\"n\">println</span><span class=\"o\">);</span>\n<span class=\"c1\">// A=1</span>\n<span class=\"c1\">// B=2</span>\n<span class=\"c1\">// C=3</span>\n</pre></div></div>\n\n<p><code>Collectors.counting</code>\u3068\u3044\u3046\u305d\u306e\u540d\u3082\u305a\u3070\u308a\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u306e\u304c\u3088\u3055\u305d\u3046\u3002\u6b21\u306b\u652f\u6255\u3063\u305f\u91d1\u984d\u306e\u5408\u8a08\u3002\u8981\u306f<code>group-by-sum</code>\u3067\u3059\u304c\u3001\u3053\u308c\u3082<code>Collectors.summingInt</code>\u3068\u3044\u3046\u308f\u304b\u308a\u3084\u3059\u3044\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3060\u3051\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"n\">var</span> <span class=\"n\">sums</span> <span class=\"o\">=</span> <span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">groupingBy</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getName</span><span class=\"o\">,</span> <span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">summingInt</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getValue</span><span class=\"o\">)));</span>\n<span class=\"n\">sums</span><span class=\"o\">.</span><span class=\"na\">entrySet</span><span class=\"o\">().</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getKey</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"=\"</span> <span class=\"o\">+</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getValue</span><span class=\"o\">()).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">::</span><span class=\"n\">println</span><span class=\"o\">);</span>\n<span class=\"c1\">// A=10</span>\n<span class=\"c1\">// B=50</span>\n<span class=\"c1\">// C=150</span>\n</pre></div></div>\n\n<p>\u6700\u5f8c\u306b\u300c\u652f\u6255\u3063\u305f\u91d1\u984d\u306e\u6700\u5927\u5024\u300d=<code>group-by-max</code>\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u3082\u3063\u3068\u3082\u8b70\u8ad6\u306e\u4f59\u5730\u304c\u3042\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u57fa\u672c\u7684\u306a\u65b9\u91dd\u3068\u3057\u3066\u306f<code>Collectors.maxBy</code>\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u305d\u3046\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"n\">var</span> <span class=\"n\">maxs</span> <span class=\"o\">=</span> <span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">groupingBy</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getName</span><span class=\"o\">,</span> <span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">maxBy</span><span class=\"o\">(</span><span class=\"n\">Comparator</span><span class=\"o\">.</span><span class=\"na\">comparingInt</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getValue</span><span class=\"o\">))));</span>\n<span class=\"n\">maxs</span><span class=\"o\">.</span><span class=\"na\">entrySet</span><span class=\"o\">().</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getKey</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"=\"</span> <span class=\"o\">+</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getValue</span><span class=\"o\">().</span><span class=\"na\">get</span><span class=\"o\">().</span><span class=\"na\">getValue</span><span class=\"o\">()).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">::</span><span class=\"n\">println</span><span class=\"o\">);</span>\n<span class=\"c1\">// A=10</span>\n<span class=\"c1\">// B=30</span>\n<span class=\"c1\">// C=60</span>\n</pre></div></div>\n\n<p>\u3053\u306e\u3068\u304d\u5909\u6570<code>maxs</code>\u306e\u578b\u306f<code>Map&lt;String, Optional&lt;Payment&gt;&gt;</code>\u3067\u3059\u3002<code>Optional</code>\u306f\u300cnull\u304b\u3082\u3057\u308c\u306a\u3044\u300d\u3053\u3068\u3092\u6ce8\u610f\u559a\u8d77\u3059\u308b\u30de\u30fc\u30ab\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u4e0a\u3001<code>maxs</code>\u306evalue\u304cnull\u306b\u306a\u308b\u3053\u3068\u306f\u3042\u308a\u3048\u307e\u305b\u3093\u3002\u8981\u306f\u3053\u3053\u3067\u306e<code>Optional</code>\u306f\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u3044\u306e\u3067\u3001\u53d6\u3063\u6255\u3044\u305f\u3044\u3002\u8a00\u3044\u63db\u3048\u308c\u3070<code>maxs</code>\u306e\u578b\u3092<code>Map&lt;String, Payment&gt;</code>\u306b\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u305d\u3046\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"n\">var</span> <span class=\"n\">maxs</span> <span class=\"o\">=</span> <span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">groupingBy</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getName</span><span class=\"o\">,</span> <span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">collectingAndThen</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">maxBy</span><span class=\"o\">(</span><span class=\"n\">Comparator</span><span class=\"o\">.</span><span class=\"na\">comparing</span><span class=\"o\">(</span><span class=\"nl\">Payment:</span><span class=\"o\">:</span><span class=\"n\">getValue</span><span class=\"o\">)),</span> <span class=\"nl\">Optional:</span><span class=\"o\">:</span><span class=\"n\">get</span><span class=\"o\">)));</span>\n<span class=\"n\">maxs</span><span class=\"o\">.</span><span class=\"na\">entrySet</span><span class=\"o\">().</span><span class=\"na\">stream</span><span class=\"o\">().</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getKey</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"=\"</span> <span class=\"o\">+</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getValue</span><span class=\"o\">().</span><span class=\"na\">getValue</span><span class=\"o\">()).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">::</span><span class=\"n\">println</span><span class=\"o\">);</span>\n<span class=\"c1\">// A=10</span>\n<span class=\"c1\">// B=30</span>\n<span class=\"c1\">// C=60</span>\n</pre></div></div>\n\n<p>\u305f\u3060\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u3001\u9ed2\u9b54\u8853\u611f\u304c\u305f\u3060\u3088\u3044\u306f\u3058\u3081\u308b\u306e\u3067\u3001\u307b\u3069\u307b\u3069\u306b\u3057\u305f\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)</p>\n", "body": "\u305f\u3068\u3048\u3070\u3001\u30e6\u30fc\u30b6\u3068\u305d\u306e\u30e6\u30fc\u30b6\u304c\u652f\u6255\u3063\u305f\u91d1\u984d\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u4e0e\u3048\u3089\u308c\u308b\u3068\u3057\u307e\u3059\u3002\n\n```java\npublic class Payment {\n    \n    public static void main(String[] args) {\n        var payments = List.of(\n            new Payment(\"A\", 10),\n            new Payment(\"B\", 20),\n            new Payment(\"B\", 30),\n            new Payment(\"C\", 40),\n            new Payment(\"C\", 50),\n            new Payment(\"C\", 60)\n        );\n    }\n\n    private String name;\n    private int value;\n    \n    public Payment(String name, int value) {\n        this.name = name;\n        this.value = value;\n    }\n    public String getName() { return name; }\n    public int getValue() { return value; }\n}\n```\n\n\u3067\u306f\u5404\u3005\u306e\u30e6\u30fc\u30b6\u306b\u3064\u3044\u3066\u3001\u652f\u6255\u3044\u306e\u500b\u6570\u3092\u652f\u6255\u3044\u306e\u56de\u6570\u3084\u652f\u6255\u3063\u305f\u91d1\u984d\u306e\u5408\u8a08\u3001\u3042\u308b\u3044\u306f\u91d1\u984d\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u305f\u3044\u3002SQL\u3067\u3042\u308c\u3070`GROUP BY`\u3068\u30a6\u30a3\u30f3\u30c9\u30a6\u95a2\u6570\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u7c21\u5358\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001Java\u306eStream\u3067\u306f\u3069\u306e\u3088\u3046\u306b\u66f8\u304f\u3079\u304d\u3067\u3057\u3087\u3046\u304b?\n\n```sql\nselect name, count(*) from payment group by name;\nselect name, sum(value) from payment group by name;\nselect name, max(value) from payment group by name;\n```\n\n\u5168\u4f53\u7684\u306a\u65b9\u91dd\u3068\u3057\u3066\u306f`Collectors.groupingBy`\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u307e\u305a\u652f\u6255\u3044\u306e\u56de\u6570\u3001\u3064\u307e\u308a`group-by-count`\u3002\n\n```java\nvar counts = payments.stream().collect(Collectors.groupingBy(Payment::getName, Collectors.counting()));\ncounts.entrySet().stream().map(e -> e.getKey() + \"=\" + e.getValue()).forEach(System.out::println);\n// A=1\n// B=2\n// C=3\n```\n\n`Collectors.counting`\u3068\u3044\u3046\u305d\u306e\u540d\u3082\u305a\u3070\u308a\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u306e\u304c\u3088\u3055\u305d\u3046\u3002\u6b21\u306b\u652f\u6255\u3063\u305f\u91d1\u984d\u306e\u5408\u8a08\u3002\u8981\u306f`group-by-sum`\u3067\u3059\u304c\u3001\u3053\u308c\u3082`Collectors.summingInt`\u3068\u3044\u3046\u308f\u304b\u308a\u3084\u3059\u3044\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```java\nvar sums = payments.stream().collect(Collectors.groupingBy(Payment::getName, Collectors.summingInt(Payment::getValue)));\nsums.entrySet().stream().map(e -> e.getKey() + \"=\" + e.getValue()).forEach(System.out::println);\n// A=10\n// B=50\n// C=150\n```\n\n\u6700\u5f8c\u306b\u300c\u652f\u6255\u3063\u305f\u91d1\u984d\u306e\u6700\u5927\u5024\u300d=`group-by-max`\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u3082\u3063\u3068\u3082\u8b70\u8ad6\u306e\u4f59\u5730\u304c\u3042\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u57fa\u672c\u7684\u306a\u65b9\u91dd\u3068\u3057\u3066\u306f`Collectors.maxBy`\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u305d\u3046\u3067\u3059\u3002\n\n```java\nvar maxs = payments.stream().collect(Collectors.groupingBy(Payment::getName, Collectors.maxBy(Comparator.comparingInt(Payment::getValue))));\nmaxs.entrySet().stream().map(e -> e.getKey() + \"=\" + e.getValue().get().getValue()).forEach(System.out::println);\n// A=10\n// B=30\n// C=60\n```\n\n\u3053\u306e\u3068\u304d\u5909\u6570`maxs`\u306e\u578b\u306f`Map<String, Optional<Payment>>`\u3067\u3059\u3002`Optional`\u306f\u300cnull\u304b\u3082\u3057\u308c\u306a\u3044\u300d\u3053\u3068\u3092\u6ce8\u610f\u559a\u8d77\u3059\u308b\u30de\u30fc\u30ab\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u4e0a\u3001`maxs`\u306evalue\u304cnull\u306b\u306a\u308b\u3053\u3068\u306f\u3042\u308a\u3048\u307e\u305b\u3093\u3002\u8981\u306f\u3053\u3053\u3067\u306e`Optional`\u306f\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u3044\u306e\u3067\u3001\u53d6\u3063\u6255\u3044\u305f\u3044\u3002\u8a00\u3044\u63db\u3048\u308c\u3070`maxs`\u306e\u578b\u3092`Map<String, Payment>`\u306b\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u305d\u3046\u3067\u3059\u3002\n\n```java\nvar maxs = payments.stream().collect(Collectors.groupingBy(Payment::getName, Collectors.collectingAndThen(Collectors.maxBy(Comparator.comparing(Payment::getValue)), Optional::get)));\nmaxs.entrySet().stream().map(e -> e.getKey() + \"=\" + e.getValue().getValue()).forEach(System.out::println);\n// A=10\n// B=30\n// C=60\n```\n\n\u305f\u3060\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u3001\u9ed2\u9b54\u8853\u611f\u304c\u305f\u3060\u3088\u3044\u306f\u3058\u3081\u308b\u306e\u3067\u3001\u307b\u3069\u307b\u3069\u306b\u3057\u305f\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\n", "coediting": false, "comments_count": 0, "created_at": "2018-07-12T21:24:10+09:00", "group": null, "id": "b759028d3609a11072e0", "likes_count": 0, "private": false, "reactions_count": 0, "tags": [{"name": "Java", "versions": []}], "title": "Stream\u3067Group By\u51e6\u7406\u3092\u884c\u3044\u305f\u3044(group-by-count, group-by-sum, group-by-max)", "updated_at": "2018-07-12T21:24:43+09:00", "url": "https://qiita.com/neko_the_shadow/items/b759028d3609a11072e0", "user": {"description": "\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3044\u305f\u306f\u3066\u306a\u30d6\u30ed\u30b0\u304c\u3001\u63a8\u7406\u5c0f\u8aac\u3084\u5192\u967a\u5c0f\u8aac\u4e2d\u5fc3\u306e\u66f8\u8a55\u30d6\u30ed\u30b0\u3068\u5316\u3057\u305f\u306e\u3067\u3001\u6280\u8853\u7684\u5185\u5bb9\u306f\u3053\u3061\u3089\u3078\u5f15\u3063\u8d8a\u3057\u3066\u304d\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb`)", "facebook_id": "", "followees_count": 0, "followers_count": 21, "github_login_name": null, "id": "neko_the_shadow", "items_count": 124, "linkedin_id": "", "location": "\u795e\u5948\u5ddd\u770c\u5ddd\u5d0e\u5e02", "name": "", "organization": "", "permanent_id": 105859, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753", "team_only": false, "twitter_screen_name": "neko_the_shadow", "website_url": "https://nekotheshadow.github.io/"}, "page_views_count": null}